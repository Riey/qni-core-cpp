// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qni-api.proto

#include "qni-api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_qni_2dapi_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConsoleRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Empty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ErrorResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Font;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringArray;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ConsolePrintButtonData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ConsoleSettingItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_InputResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProgramCommandArray;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProgramRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ConsolePrintData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ConsoleResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_InputRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ProgramCommand;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_qni_2dapi_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ProgramResponse;
}  // namespace protobuf_qni_2dapi_2eproto
namespace qni {
namespace api {
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
class StringArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringArray>
      _instance;
} _StringArray_default_instance_;
class ErrorResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorResponse>
      _instance;
} _ErrorResponse_default_instance_;
class InputRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputRequest>
      _instance;
  const ::qni::api::Empty* touch_;
  const ::qni::api::Empty* enter_;
  const ::qni::api::Empty* anykey_;
  const ::qni::api::Empty* boolean_;
  const ::qni::api::Empty* str_;
  ::google::protobuf::uint32 str_max_len_;
  const ::qni::api::StringArray* str_select_;
  const ::qni::api::Empty* int__;
  ::google::protobuf::uint32 int_max_len_;
  const ::qni::api::Empty* float__;
  ::google::protobuf::uint32 float_max_len_;
  const ::qni::api::Empty* date_;
  const ::qni::api::Empty* datetime_;
  const ::qni::api::Empty* time_;
  const ::qni::api::Empty* color_;
} _InputRequest_default_instance_;
class InputResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputResponse>
      _instance;
  const ::qni::api::Empty* empty_;
  bool boolean_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::int32 int__;
  float float__;
  ::google::protobuf::uint64 date_;
  ::google::protobuf::uint64 datetime_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint32 color_;
} _InputResponse_default_instance_;
class ConsolePrintButtonDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConsolePrintButtonData>
      _instance;
} _ConsolePrintButtonData_default_instance_;
class ConsolePrintDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConsolePrintData>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr print_;
  ::google::protobuf::internal::ArenaStringPtr print_line_;
  const ::qni::api::ConsolePrintButtonData* print_button_;
  const ::qni::api::Empty* new_line_;
  ::google::protobuf::uint32 delete_line_;
  const ::qni::api::Empty* clear_line_;
} _ConsolePrintData_default_instance_;
class FontDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Font>
      _instance;
} _Font_default_instance_;
class ConsoleSettingItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConsoleSettingItem>
      _instance;
  ::google::protobuf::uint32 text_color_;
  ::google::protobuf::uint32 back_color_;
  ::google::protobuf::uint32 highlight_color_;
  const ::qni::api::Font* font_;
  int text_align_;
} _ConsoleSettingItem_default_instance_;
class ConsoleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConsoleRequest>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr load_state_;
  ::google::protobuf::internal::ArenaStringPtr share_state_;
  ::google::protobuf::internal::ArenaStringPtr share_state_overwrite_;
  ::google::protobuf::internal::ArenaStringPtr delete_state_;
  ::google::protobuf::uint64 get_state_;
} _ConsoleRequest_default_instance_;
class ConsoleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConsoleResponse>
      _instance;
  const ::qni::api::InputResponse* ok_input_;
  const ::qni::api::ErrorResponse* err_;
} _ConsoleResponse_default_instance_;
class ConsoleMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConsoleMessage>
      _instance;
  const ::qni::api::ConsoleRequest* req_;
  const ::qni::api::ConsoleResponse* res_;
} _ConsoleMessage_default_instance_;
class ProgramCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProgramCommand>
      _instance;
  const ::qni::api::ConsolePrintData* print_;
  const ::qni::api::ConsoleSettingItem* update_setting_;
} _ProgramCommand_default_instance_;
class ProgramCommandArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProgramCommandArray>
      _instance;
} _ProgramCommandArray_default_instance_;
class ProgramRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProgramRequest>
      _instance;
  const ::qni::api::InputRequest* input_;
} _ProgramRequest_default_instance_;
class ProgramResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProgramResponse>
      _instance;
  const ::qni::api::Empty* ok_load_state_;
  const ::qni::api::Empty* ok_delete_state_;
  ::google::protobuf::internal::ArenaStringPtr ok_share_state_;
  const ::qni::api::ProgramCommandArray* ok_get_state_;
  const ::qni::api::ErrorResponse* err_;
} _ProgramResponse_default_instance_;
class ProgramMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProgramMessage>
      _instance;
  const ::qni::api::ProgramRequest* req_;
  const ::qni::api::ProgramResponse* res_;
  ::google::protobuf::uint32 accept_res_;
} _ProgramMessage_default_instance_;
}  // namespace api
}  // namespace qni
namespace protobuf_qni_2dapi_2eproto {
static void InitDefaultsEmpty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_Empty_default_instance_;
    new (ptr) ::qni::api::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::Empty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Empty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmpty}, {}};

static void InitDefaultsStringArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_StringArray_default_instance_;
    new (ptr) ::qni::api::StringArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::StringArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StringArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStringArray}, {}};

static void InitDefaultsErrorResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_ErrorResponse_default_instance_;
    new (ptr) ::qni::api::ErrorResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::ErrorResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ErrorResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsErrorResponse}, {}};

static void InitDefaultsInputRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_InputRequest_default_instance_;
    new (ptr) ::qni::api::InputRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::InputRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_InputRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsInputRequest}, {
      &protobuf_qni_2dapi_2eproto::scc_info_Empty.base,
      &protobuf_qni_2dapi_2eproto::scc_info_StringArray.base,}};

static void InitDefaultsInputResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_InputResponse_default_instance_;
    new (ptr) ::qni::api::InputResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::InputResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InputResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInputResponse}, {
      &protobuf_qni_2dapi_2eproto::scc_info_Empty.base,}};

static void InitDefaultsConsolePrintButtonData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_ConsolePrintButtonData_default_instance_;
    new (ptr) ::qni::api::ConsolePrintButtonData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::ConsolePrintButtonData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConsolePrintButtonData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConsolePrintButtonData}, {
      &protobuf_qni_2dapi_2eproto::scc_info_InputResponse.base,}};

static void InitDefaultsConsolePrintData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_ConsolePrintData_default_instance_;
    new (ptr) ::qni::api::ConsolePrintData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::ConsolePrintData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ConsolePrintData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsConsolePrintData}, {
      &protobuf_qni_2dapi_2eproto::scc_info_ConsolePrintButtonData.base,
      &protobuf_qni_2dapi_2eproto::scc_info_Empty.base,}};

static void InitDefaultsFont() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_Font_default_instance_;
    new (ptr) ::qni::api::Font();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::Font::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Font =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFont}, {}};

static void InitDefaultsConsoleSettingItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_ConsoleSettingItem_default_instance_;
    new (ptr) ::qni::api::ConsoleSettingItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::ConsoleSettingItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConsoleSettingItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConsoleSettingItem}, {
      &protobuf_qni_2dapi_2eproto::scc_info_Font.base,}};

static void InitDefaultsConsoleRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_ConsoleRequest_default_instance_;
    new (ptr) ::qni::api::ConsoleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::ConsoleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConsoleRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConsoleRequest}, {}};

static void InitDefaultsConsoleResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_ConsoleResponse_default_instance_;
    new (ptr) ::qni::api::ConsoleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::ConsoleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ConsoleResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsConsoleResponse}, {
      &protobuf_qni_2dapi_2eproto::scc_info_InputResponse.base,
      &protobuf_qni_2dapi_2eproto::scc_info_ErrorResponse.base,}};

static void InitDefaultsConsoleMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_ConsoleMessage_default_instance_;
    new (ptr) ::qni::api::ConsoleMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::ConsoleMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ConsoleMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsConsoleMessage}, {
      &protobuf_qni_2dapi_2eproto::scc_info_ConsoleRequest.base,
      &protobuf_qni_2dapi_2eproto::scc_info_ConsoleResponse.base,}};

static void InitDefaultsProgramCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_ProgramCommand_default_instance_;
    new (ptr) ::qni::api::ProgramCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::ProgramCommand::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ProgramCommand =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsProgramCommand}, {
      &protobuf_qni_2dapi_2eproto::scc_info_ConsolePrintData.base,
      &protobuf_qni_2dapi_2eproto::scc_info_ConsoleSettingItem.base,}};

static void InitDefaultsProgramCommandArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_ProgramCommandArray_default_instance_;
    new (ptr) ::qni::api::ProgramCommandArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::ProgramCommandArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProgramCommandArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProgramCommandArray}, {
      &protobuf_qni_2dapi_2eproto::scc_info_ProgramCommand.base,}};

static void InitDefaultsProgramRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_ProgramRequest_default_instance_;
    new (ptr) ::qni::api::ProgramRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::ProgramRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProgramRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProgramRequest}, {
      &protobuf_qni_2dapi_2eproto::scc_info_InputRequest.base,}};

static void InitDefaultsProgramResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_ProgramResponse_default_instance_;
    new (ptr) ::qni::api::ProgramResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::ProgramResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ProgramResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsProgramResponse}, {
      &protobuf_qni_2dapi_2eproto::scc_info_Empty.base,
      &protobuf_qni_2dapi_2eproto::scc_info_ProgramCommandArray.base,
      &protobuf_qni_2dapi_2eproto::scc_info_ErrorResponse.base,}};

static void InitDefaultsProgramMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::qni::api::_ProgramMessage_default_instance_;
    new (ptr) ::qni::api::ProgramMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qni::api::ProgramMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ProgramMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsProgramMessage}, {
      &protobuf_qni_2dapi_2eproto::scc_info_ProgramRequest.base,
      &protobuf_qni_2dapi_2eproto::scc_info_ProgramResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Empty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StringArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ErrorResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConsolePrintButtonData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConsolePrintData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Font.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConsoleSettingItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConsoleRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConsoleResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConsoleMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProgramCommand.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProgramCommandArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProgramRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProgramResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProgramMessage.base);
}

::google::protobuf::Metadata file_level_metadata[17];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::StringArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::StringArray, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ErrorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ErrorResponse, req_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ErrorResponse, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::InputRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::InputRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::InputRequest, expire_),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, touch_),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, enter_),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, anykey_),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, boolean_),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, str_),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, str_max_len_),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, str_select_),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, int__),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, int_max_len_),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, float__),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, float_max_len_),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, date_),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, datetime_),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, time_),
  offsetof(::qni::api::InputRequestDefaultTypeInternal, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::InputRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::InputResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::InputResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::qni::api::InputResponseDefaultTypeInternal, empty_),
  offsetof(::qni::api::InputResponseDefaultTypeInternal, boolean_),
  offsetof(::qni::api::InputResponseDefaultTypeInternal, str_),
  offsetof(::qni::api::InputResponseDefaultTypeInternal, int__),
  offsetof(::qni::api::InputResponseDefaultTypeInternal, float__),
  offsetof(::qni::api::InputResponseDefaultTypeInternal, date_),
  offsetof(::qni::api::InputResponseDefaultTypeInternal, datetime_),
  offsetof(::qni::api::InputResponseDefaultTypeInternal, time_),
  offsetof(::qni::api::InputResponseDefaultTypeInternal, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::InputResponse, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsolePrintButtonData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsolePrintButtonData, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsolePrintButtonData, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsolePrintData, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsolePrintData, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::qni::api::ConsolePrintDataDefaultTypeInternal, print_),
  offsetof(::qni::api::ConsolePrintDataDefaultTypeInternal, print_line_),
  offsetof(::qni::api::ConsolePrintDataDefaultTypeInternal, print_button_),
  offsetof(::qni::api::ConsolePrintDataDefaultTypeInternal, new_line_),
  offsetof(::qni::api::ConsolePrintDataDefaultTypeInternal, delete_line_),
  offsetof(::qni::api::ConsolePrintDataDefaultTypeInternal, clear_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsolePrintData, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::Font, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::Font, font_family_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::Font, font_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::Font, font_style_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsoleSettingItem, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsoleSettingItem, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::qni::api::ConsoleSettingItemDefaultTypeInternal, text_color_),
  offsetof(::qni::api::ConsoleSettingItemDefaultTypeInternal, back_color_),
  offsetof(::qni::api::ConsoleSettingItemDefaultTypeInternal, highlight_color_),
  offsetof(::qni::api::ConsoleSettingItemDefaultTypeInternal, font_),
  offsetof(::qni::api::ConsoleSettingItemDefaultTypeInternal, text_align_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsoleSettingItem, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsoleRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::qni::api::ConsoleRequestDefaultTypeInternal, load_state_),
  offsetof(::qni::api::ConsoleRequestDefaultTypeInternal, share_state_),
  offsetof(::qni::api::ConsoleRequestDefaultTypeInternal, share_state_overwrite_),
  offsetof(::qni::api::ConsoleRequestDefaultTypeInternal, delete_state_),
  offsetof(::qni::api::ConsoleRequestDefaultTypeInternal, get_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsoleRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsoleResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsoleResponse, tag_),
  offsetof(::qni::api::ConsoleResponseDefaultTypeInternal, ok_input_),
  offsetof(::qni::api::ConsoleResponseDefaultTypeInternal, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsoleResponse, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsoleMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsoleMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::qni::api::ConsoleMessageDefaultTypeInternal, req_),
  offsetof(::qni::api::ConsoleMessageDefaultTypeInternal, res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ConsoleMessage, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramCommand, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::qni::api::ProgramCommandDefaultTypeInternal, print_),
  offsetof(::qni::api::ProgramCommandDefaultTypeInternal, update_setting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramCommand, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramCommandArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramCommandArray, commands_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramRequest, tag_),
  offsetof(::qni::api::ProgramRequestDefaultTypeInternal, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::qni::api::ProgramResponseDefaultTypeInternal, ok_load_state_),
  offsetof(::qni::api::ProgramResponseDefaultTypeInternal, ok_delete_state_),
  offsetof(::qni::api::ProgramResponseDefaultTypeInternal, ok_share_state_),
  offsetof(::qni::api::ProgramResponseDefaultTypeInternal, ok_get_state_),
  offsetof(::qni::api::ProgramResponseDefaultTypeInternal, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramResponse, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::qni::api::ProgramMessageDefaultTypeInternal, req_),
  offsetof(::qni::api::ProgramMessageDefaultTypeInternal, res_),
  offsetof(::qni::api::ProgramMessageDefaultTypeInternal, accept_res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qni::api::ProgramMessage, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::qni::api::Empty)},
  { 5, -1, sizeof(::qni::api::StringArray)},
  { 11, -1, sizeof(::qni::api::ErrorResponse)},
  { 18, -1, sizeof(::qni::api::InputRequest)},
  { 40, -1, sizeof(::qni::api::InputResponse)},
  { 55, -1, sizeof(::qni::api::ConsolePrintButtonData)},
  { 62, -1, sizeof(::qni::api::ConsolePrintData)},
  { 74, -1, sizeof(::qni::api::Font)},
  { 82, -1, sizeof(::qni::api::ConsoleSettingItem)},
  { 93, -1, sizeof(::qni::api::ConsoleRequest)},
  { 104, -1, sizeof(::qni::api::ConsoleResponse)},
  { 113, -1, sizeof(::qni::api::ConsoleMessage)},
  { 121, -1, sizeof(::qni::api::ProgramCommand)},
  { 129, -1, sizeof(::qni::api::ProgramCommandArray)},
  { 135, -1, sizeof(::qni::api::ProgramRequest)},
  { 143, -1, sizeof(::qni::api::ProgramResponse)},
  { 154, -1, sizeof(::qni::api::ProgramMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_StringArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_ErrorResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_InputRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_InputResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_ConsolePrintButtonData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_ConsolePrintData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_Font_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_ConsoleSettingItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_ConsoleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_ConsoleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_ConsoleMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_ProgramCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_ProgramCommandArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_ProgramRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_ProgramResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qni::api::_ProgramMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "qni-api.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rqni-api.proto\022\007qni.api\"\007\n\005Empty\"\033\n\013Str"
      "ingArray\022\014\n\004data\030\001 \003(\t\"1\n\rErrorResponse\022"
      "\020\n\010req_type\030\001 \001(\r\022\016\n\006reason\030\002 \001(\t\"\204\004\n\014In"
      "putRequest\022\016\n\006expire\030\001 \001(\r\022\037\n\005TOUCH\030\n \001("
      "\0132\016.qni.api.EmptyH\000\022\037\n\005ENTER\030\013 \001(\0132\016.qni"
      ".api.EmptyH\000\022 \n\006ANYKEY\030\014 \001(\0132\016.qni.api.E"
      "mptyH\000\022!\n\007BOOLEAN\030\r \001(\0132\016.qni.api.EmptyH"
      "\000\022\035\n\003STR\030\024 \001(\0132\016.qni.api.EmptyH\000\022\025\n\013STR_"
      "MAX_LEN\030\025 \001(\rH\000\022*\n\nSTR_SELECT\030\026 \001(\0132\024.qn"
      "i.api.StringArrayH\000\022\035\n\003INT\030\036 \001(\0132\016.qni.a"
      "pi.EmptyH\000\022\025\n\013INT_MAX_LEN\030\037 \001(\rH\000\022\037\n\005FLO"
      "AT\030( \001(\0132\016.qni.api.EmptyH\000\022\027\n\rFLOAT_MAX_"
      "LEN\030) \001(\rH\000\022\036\n\004DATE\0302 \001(\0132\016.qni.api.Empt"
      "yH\000\022\"\n\010DATETIME\0303 \001(\0132\016.qni.api.EmptyH\000\022"
      "\036\n\004TIME\0304 \001(\0132\016.qni.api.EmptyH\000\022\037\n\005COLOR"
      "\030< \001(\0132\016.qni.api.EmptyH\000B\006\n\004data\"\277\001\n\rInp"
      "utResponse\022\037\n\005EMPTY\030\n \001(\0132\016.qni.api.Empt"
      "yH\000\022\021\n\007BOOLEAN\030\024 \001(\010H\000\022\r\n\003STR\030\025 \001(\tH\000\022\r\n"
      "\003INT\030\026 \001(\005H\000\022\017\n\005FLOAT\030\027 \001(\002H\000\022\016\n\004DATE\030\036 "
      "\001(\004H\000\022\022\n\010DATETIME\030\037 \001(\004H\000\022\016\n\004TIME\030  \001(\004H"
      "\000\022\017\n\005COLOR\030( \001(\rH\000B\006\n\004data\"M\n\026ConsolePri"
      "ntButtonData\022%\n\005value\030\001 \001(\0132\026.qni.api.In"
      "putResponse\022\014\n\004text\030\002 \001(\t\"\333\001\n\020ConsolePri"
      "ntData\022\017\n\005PRINT\030\n \001(\tH\000\022\024\n\nPRINT_LINE\030\013 "
      "\001(\tH\000\0227\n\014PRINT_BUTTON\030\014 \001(\0132\037.qni.api.Co"
      "nsolePrintButtonDataH\000\022\"\n\010NEW_LINE\030\024 \001(\013"
      "2\016.qni.api.EmptyH\000\022\025\n\013DELETE_LINE\030\036 \001(\rH"
      "\000\022$\n\nCLEAR_LINE\030\037 \001(\0132\016.qni.api.EmptyH\000B"
      "\006\n\004data\"B\n\004Font\022\023\n\013font_family\030\001 \001(\t\022\021\n\t"
      "font_size\030\002 \001(\002\022\022\n\nfont_style\030\003 \001(\r\"\254\001\n\022"
      "ConsoleSettingItem\022\024\n\nTEXT_COLOR\030\n \001(\rH\000"
      "\022\024\n\nBACK_COLOR\030\013 \001(\rH\000\022\031\n\017HIGHLIGHT_COLO"
      "R\030\014 \001(\rH\000\022\035\n\004FONT\030\024 \001(\0132\r.qni.api.FontH\000"
      "\022(\n\nTEXT_ALIGN\030\025 \001(\0162\022.qni.api.TextAlign"
      "H\000B\006\n\004data\"\223\001\n\016ConsoleRequest\022\024\n\nLOAD_ST"
      "ATE\030\n \001(\tH\000\022\025\n\013SHARE_STATE\030\013 \001(\tH\000\022\037\n\025SH"
      "ARE_STATE_OVERWRITE\030\014 \001(\tH\000\022\026\n\014DELETE_ST"
      "ATE\030\r \001(\tH\000\022\023\n\tGET_STATE\030\024 \001(\004H\000B\006\n\004data"
      "\"z\n\017ConsoleResponse\022\013\n\003tag\030\001 \001(\r\022*\n\010OK_I"
      "NPUT\030\n \001(\0132\026.qni.api.InputResponseH\000\022&\n\003"
      "ERR\030\377\001 \001(\0132\026.qni.api.ErrorResponseH\000B\006\n\004"
      "data\"i\n\016ConsoleMessage\022&\n\003REQ\030\n \001(\0132\027.qn"
      "i.api.ConsoleRequestH\000\022\'\n\003RES\030\013 \001(\0132\030.qn"
      "i.api.ConsoleResponseH\000B\006\n\004data\"{\n\016Progr"
      "amCommand\022*\n\005PRINT\030\n \001(\0132\031.qni.api.Conso"
      "lePrintDataH\000\0225\n\016UPDATE_SETTING\030\013 \001(\0132\033."
      "qni.api.ConsoleSettingItemH\000B\006\n\004data\"@\n\023"
      "ProgramCommandArray\022)\n\010commands\030\001 \003(\0132\027."
      "qni.api.ProgramCommand\"M\n\016ProgramRequest"
      "\022\013\n\003tag\030\001 \001(\r\022&\n\005INPUT\030\n \001(\0132\025.qni.api.I"
      "nputRequestH\000B\006\n\004data\"\345\001\n\017ProgramRespons"
      "e\022\'\n\rOK_LOAD_STATE\030\n \001(\0132\016.qni.api.Empty"
      "H\000\022)\n\017OK_DELETE_STATE\030\013 \001(\0132\016.qni.api.Em"
      "ptyH\000\022\030\n\016OK_SHARE_STATE\030\014 \001(\tH\000\0224\n\014OK_GE"
      "T_STATE\030\r \001(\0132\034.qni.api.ProgramCommandAr"
      "rayH\000\022&\n\003ERR\030\377\001 \001(\0132\026.qni.api.ErrorRespo"
      "nseH\000B\006\n\004data\"\177\n\016ProgramMessage\022&\n\003REQ\030\n"
      " \001(\0132\027.qni.api.ProgramRequestH\000\022\'\n\003RES\030\013"
      " \001(\0132\030.qni.api.ProgramResponseH\000\022\024\n\nACCE"
      "PT_RES\030\014 \001(\rH\000B\006\n\004data*=\n\tFontStyle\022\013\n\007R"
      "EGULAR\020\000\022\n\n\006ITALIC\020\001\022\010\n\004BOLD\020\002\022\r\n\tUNDERL"
      "INE\020\004*,\n\tTextAlign\022\010\n\004LEFT\020\000\022\t\n\005RIGHT\020\001\022"
      "\n\n\006CENTER\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2499);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "qni-api.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_qni_2dapi_2eproto
namespace qni {
namespace api {
const ::google::protobuf::EnumDescriptor* FontStyle_descriptor() {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qni_2dapi_2eproto::file_level_enum_descriptors[0];
}
bool FontStyle_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TextAlign_descriptor() {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qni_2dapi_2eproto::file_level_enum_descriptors[1];
}
bool TextAlign_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_Empty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qni.api.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:qni.api.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_Empty.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.Empty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StringArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringArray::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringArray::StringArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_StringArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.StringArray)
}
StringArray::StringArray(const StringArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qni.api.StringArray)
}

void StringArray::SharedCtor() {
}

StringArray::~StringArray() {
  // @@protoc_insertion_point(destructor:qni.api.StringArray)
  SharedDtor();
}

void StringArray::SharedDtor() {
}

void StringArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StringArray::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringArray& StringArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_StringArray.base);
  return *internal_default_instance();
}


void StringArray::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.StringArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear();
}

bool StringArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.StringArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data(this->data_size() - 1).data(),
            static_cast<int>(this->data(this->data_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qni.api.StringArray.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.StringArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.StringArray)
  return false;
#undef DO_
}

void StringArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.StringArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string data = 1;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data(i).data(), static_cast<int>(this->data(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.StringArray.data");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->data(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.StringArray)
}

::google::protobuf::uint8* StringArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.StringArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string data = 1;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data(i).data(), static_cast<int>(this->data(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.StringArray.data");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->data(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.StringArray)
  return target;
}

size_t StringArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.StringArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string data = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_size());
  for (int i = 0, n = this->data_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->data(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.StringArray)
  GOOGLE_DCHECK_NE(&from, this);
  const StringArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.StringArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.StringArray)
    MergeFrom(*source);
  }
}

void StringArray::MergeFrom(const StringArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.StringArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void StringArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.StringArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringArray::CopyFrom(const StringArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.StringArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringArray::IsInitialized() const {
  return true;
}

void StringArray::Swap(StringArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringArray::InternalSwap(StringArray* other) {
  using std::swap;
  data_.InternalSwap(CastToBase(&other->data_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StringArray::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ErrorResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorResponse::kReqTypeFieldNumber;
const int ErrorResponse::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorResponse::ErrorResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_ErrorResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.ErrorResponse)
}
ErrorResponse::ErrorResponse(const ErrorResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  req_type_ = from.req_type_;
  // @@protoc_insertion_point(copy_constructor:qni.api.ErrorResponse)
}

void ErrorResponse::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  req_type_ = 0u;
}

ErrorResponse::~ErrorResponse() {
  // @@protoc_insertion_point(destructor:qni.api.ErrorResponse)
  SharedDtor();
}

void ErrorResponse::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ErrorResponse::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorResponse& ErrorResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_ErrorResponse.base);
  return *internal_default_instance();
}


void ErrorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.ErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  req_type_ = 0u;
  _internal_metadata_.Clear();
}

bool ErrorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.ErrorResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 req_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &req_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qni.api.ErrorResponse.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.ErrorResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.ErrorResponse)
  return false;
#undef DO_
}

void ErrorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.ErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 req_type = 1;
  if (this->req_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->req_type(), output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ErrorResponse.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.ErrorResponse)
}

::google::protobuf::uint8* ErrorResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.ErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 req_type = 1;
  if (this->req_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->req_type(), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ErrorResponse.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.ErrorResponse)
  return target;
}

size_t ErrorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.ErrorResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // uint32 req_type = 1;
  if (this->req_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->req_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.ErrorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.ErrorResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.ErrorResponse)
    MergeFrom(*source);
  }
}

void ErrorResponse::MergeFrom(const ErrorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.ErrorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.req_type() != 0) {
    set_req_type(from.req_type());
  }
}

void ErrorResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.ErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorResponse::CopyFrom(const ErrorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.ErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorResponse::IsInitialized() const {
  return true;
}

void ErrorResponse::Swap(ErrorResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorResponse::InternalSwap(ErrorResponse* other) {
  using std::swap;
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(req_type_, other->req_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ErrorResponse::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InputRequest::InitAsDefaultInstance() {
  ::qni::api::_InputRequest_default_instance_.touch_ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
  ::qni::api::_InputRequest_default_instance_.enter_ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
  ::qni::api::_InputRequest_default_instance_.anykey_ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
  ::qni::api::_InputRequest_default_instance_.boolean_ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
  ::qni::api::_InputRequest_default_instance_.str_ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
  ::qni::api::_InputRequest_default_instance_.str_max_len_ = 0u;
  ::qni::api::_InputRequest_default_instance_.str_select_ = const_cast< ::qni::api::StringArray*>(
      ::qni::api::StringArray::internal_default_instance());
  ::qni::api::_InputRequest_default_instance_.int__ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
  ::qni::api::_InputRequest_default_instance_.int_max_len_ = 0u;
  ::qni::api::_InputRequest_default_instance_.float__ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
  ::qni::api::_InputRequest_default_instance_.float_max_len_ = 0u;
  ::qni::api::_InputRequest_default_instance_.date_ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
  ::qni::api::_InputRequest_default_instance_.datetime_ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
  ::qni::api::_InputRequest_default_instance_.time_ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
  ::qni::api::_InputRequest_default_instance_.color_ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
}
void InputRequest::set_allocated_touch(::qni::api::Empty* touch) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (touch) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      touch = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, touch, submessage_arena);
    }
    set_has_touch();
    data_.touch_ = touch;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.InputRequest.TOUCH)
}
void InputRequest::set_allocated_enter(::qni::api::Empty* enter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (enter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enter, submessage_arena);
    }
    set_has_enter();
    data_.enter_ = enter;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.InputRequest.ENTER)
}
void InputRequest::set_allocated_anykey(::qni::api::Empty* anykey) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (anykey) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      anykey = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, anykey, submessage_arena);
    }
    set_has_anykey();
    data_.anykey_ = anykey;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.InputRequest.ANYKEY)
}
void InputRequest::set_allocated_boolean(::qni::api::Empty* boolean) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (boolean) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      boolean = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    data_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.InputRequest.BOOLEAN)
}
void InputRequest::set_allocated_str(::qni::api::Empty* str) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (str) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      str = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, str, submessage_arena);
    }
    set_has_str();
    data_.str_ = str;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.InputRequest.STR)
}
void InputRequest::set_allocated_str_select(::qni::api::StringArray* str_select) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (str_select) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      str_select = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, str_select, submessage_arena);
    }
    set_has_str_select();
    data_.str_select_ = str_select;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.InputRequest.STR_SELECT)
}
void InputRequest::set_allocated_int_(::qni::api::Empty* int_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (int_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      int_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, int_, submessage_arena);
    }
    set_has_int_();
    data_.int__ = int_;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.InputRequest.INT)
}
void InputRequest::set_allocated_float_(::qni::api::Empty* float_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (float_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      float_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, float_, submessage_arena);
    }
    set_has_float_();
    data_.float__ = float_;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.InputRequest.FLOAT)
}
void InputRequest::set_allocated_date(::qni::api::Empty* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    set_has_date();
    data_.date_ = date;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.InputRequest.DATE)
}
void InputRequest::set_allocated_datetime(::qni::api::Empty* datetime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (datetime) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      datetime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, datetime, submessage_arena);
    }
    set_has_datetime();
    data_.datetime_ = datetime;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.InputRequest.DATETIME)
}
void InputRequest::set_allocated_time(::qni::api::Empty* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
    data_.time_ = time;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.InputRequest.TIME)
}
void InputRequest::set_allocated_color(::qni::api::Empty* color) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (color) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      color = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, color, submessage_arena);
    }
    set_has_color();
    data_.color_ = color;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.InputRequest.COLOR)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputRequest::kExpireFieldNumber;
const int InputRequest::kTOUCHFieldNumber;
const int InputRequest::kENTERFieldNumber;
const int InputRequest::kANYKEYFieldNumber;
const int InputRequest::kBOOLEANFieldNumber;
const int InputRequest::kSTRFieldNumber;
const int InputRequest::kSTRMAXLENFieldNumber;
const int InputRequest::kSTRSELECTFieldNumber;
const int InputRequest::kINTFieldNumber;
const int InputRequest::kINTMAXLENFieldNumber;
const int InputRequest::kFLOATFieldNumber;
const int InputRequest::kFLOATMAXLENFieldNumber;
const int InputRequest::kDATEFieldNumber;
const int InputRequest::kDATETIMEFieldNumber;
const int InputRequest::kTIMEFieldNumber;
const int InputRequest::kCOLORFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputRequest::InputRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_InputRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.InputRequest)
}
InputRequest::InputRequest(const InputRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  expire_ = from.expire_;
  clear_has_data();
  switch (from.data_case()) {
    case kTOUCH: {
      mutable_touch()->::qni::api::Empty::MergeFrom(from.touch());
      break;
    }
    case kENTER: {
      mutable_enter()->::qni::api::Empty::MergeFrom(from.enter());
      break;
    }
    case kANYKEY: {
      mutable_anykey()->::qni::api::Empty::MergeFrom(from.anykey());
      break;
    }
    case kBOOLEAN: {
      mutable_boolean()->::qni::api::Empty::MergeFrom(from.boolean());
      break;
    }
    case kSTR: {
      mutable_str()->::qni::api::Empty::MergeFrom(from.str());
      break;
    }
    case kSTRMAXLEN: {
      set_str_max_len(from.str_max_len());
      break;
    }
    case kSTRSELECT: {
      mutable_str_select()->::qni::api::StringArray::MergeFrom(from.str_select());
      break;
    }
    case kINT: {
      mutable_int_()->::qni::api::Empty::MergeFrom(from.int_());
      break;
    }
    case kINTMAXLEN: {
      set_int_max_len(from.int_max_len());
      break;
    }
    case kFLOAT: {
      mutable_float_()->::qni::api::Empty::MergeFrom(from.float_());
      break;
    }
    case kFLOATMAXLEN: {
      set_float_max_len(from.float_max_len());
      break;
    }
    case kDATE: {
      mutable_date()->::qni::api::Empty::MergeFrom(from.date());
      break;
    }
    case kDATETIME: {
      mutable_datetime()->::qni::api::Empty::MergeFrom(from.datetime());
      break;
    }
    case kTIME: {
      mutable_time()->::qni::api::Empty::MergeFrom(from.time());
      break;
    }
    case kCOLOR: {
      mutable_color()->::qni::api::Empty::MergeFrom(from.color());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qni.api.InputRequest)
}

void InputRequest::SharedCtor() {
  expire_ = 0u;
  clear_has_data();
}

InputRequest::~InputRequest() {
  // @@protoc_insertion_point(destructor:qni.api.InputRequest)
  SharedDtor();
}

void InputRequest::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
}

void InputRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputRequest::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputRequest& InputRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_InputRequest.base);
  return *internal_default_instance();
}


void InputRequest::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:qni.api.InputRequest)
  switch (data_case()) {
    case kTOUCH: {
      delete data_.touch_;
      break;
    }
    case kENTER: {
      delete data_.enter_;
      break;
    }
    case kANYKEY: {
      delete data_.anykey_;
      break;
    }
    case kBOOLEAN: {
      delete data_.boolean_;
      break;
    }
    case kSTR: {
      delete data_.str_;
      break;
    }
    case kSTRMAXLEN: {
      // No need to clear
      break;
    }
    case kSTRSELECT: {
      delete data_.str_select_;
      break;
    }
    case kINT: {
      delete data_.int__;
      break;
    }
    case kINTMAXLEN: {
      // No need to clear
      break;
    }
    case kFLOAT: {
      delete data_.float__;
      break;
    }
    case kFLOATMAXLEN: {
      // No need to clear
      break;
    }
    case kDATE: {
      delete data_.date_;
      break;
    }
    case kDATETIME: {
      delete data_.datetime_;
      break;
    }
    case kTIME: {
      delete data_.time_;
      break;
    }
    case kCOLOR: {
      delete data_.color_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void InputRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.InputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expire_ = 0u;
  clear_data();
  _internal_metadata_.Clear();
}

bool InputRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.InputRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 expire = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expire_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Empty TOUCH = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_touch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Empty ENTER = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Empty ANYKEY = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_anykey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Empty BOOLEAN = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Empty STR = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_str()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 STR_MAX_LEN = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_.str_max_len_)));
          set_has_str_max_len();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.StringArray STR_SELECT = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_str_select()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Empty INT = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_int_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 INT_MAX_LEN = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_.int_max_len_)));
          set_has_int_max_len();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Empty FLOAT = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_float_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 FLOAT_MAX_LEN = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_.float_max_len_)));
          set_has_float_max_len();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Empty DATE = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Empty DATETIME = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_datetime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Empty TIME = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Empty COLOR = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_color()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.InputRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.InputRequest)
  return false;
#undef DO_
}

void InputRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.InputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 expire = 1;
  if (this->expire() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->expire(), output);
  }

  // .qni.api.Empty TOUCH = 10;
  if (has_touch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_touch(), output);
  }

  // .qni.api.Empty ENTER = 11;
  if (has_enter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_enter(), output);
  }

  // .qni.api.Empty ANYKEY = 12;
  if (has_anykey()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_anykey(), output);
  }

  // .qni.api.Empty BOOLEAN = 13;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_boolean(), output);
  }

  // .qni.api.Empty STR = 20;
  if (has_str()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_str(), output);
  }

  // uint32 STR_MAX_LEN = 21;
  if (has_str_max_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->str_max_len(), output);
  }

  // .qni.api.StringArray STR_SELECT = 22;
  if (has_str_select()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_str_select(), output);
  }

  // .qni.api.Empty INT = 30;
  if (has_int_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_int_(), output);
  }

  // uint32 INT_MAX_LEN = 31;
  if (has_int_max_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->int_max_len(), output);
  }

  // .qni.api.Empty FLOAT = 40;
  if (has_float_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, this->_internal_float_(), output);
  }

  // uint32 FLOAT_MAX_LEN = 41;
  if (has_float_max_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(41, this->float_max_len(), output);
  }

  // .qni.api.Empty DATE = 50;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->_internal_date(), output);
  }

  // .qni.api.Empty DATETIME = 51;
  if (has_datetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->_internal_datetime(), output);
  }

  // .qni.api.Empty TIME = 52;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, this->_internal_time(), output);
  }

  // .qni.api.Empty COLOR = 60;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, this->_internal_color(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.InputRequest)
}

::google::protobuf::uint8* InputRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.InputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 expire = 1;
  if (this->expire() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->expire(), target);
  }

  // .qni.api.Empty TOUCH = 10;
  if (has_touch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_touch(), deterministic, target);
  }

  // .qni.api.Empty ENTER = 11;
  if (has_enter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_enter(), deterministic, target);
  }

  // .qni.api.Empty ANYKEY = 12;
  if (has_anykey()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_anykey(), deterministic, target);
  }

  // .qni.api.Empty BOOLEAN = 13;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_boolean(), deterministic, target);
  }

  // .qni.api.Empty STR = 20;
  if (has_str()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_str(), deterministic, target);
  }

  // uint32 STR_MAX_LEN = 21;
  if (has_str_max_len()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->str_max_len(), target);
  }

  // .qni.api.StringArray STR_SELECT = 22;
  if (has_str_select()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_str_select(), deterministic, target);
  }

  // .qni.api.Empty INT = 30;
  if (has_int_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_int_(), deterministic, target);
  }

  // uint32 INT_MAX_LEN = 31;
  if (has_int_max_len()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->int_max_len(), target);
  }

  // .qni.api.Empty FLOAT = 40;
  if (has_float_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40, this->_internal_float_(), deterministic, target);
  }

  // uint32 FLOAT_MAX_LEN = 41;
  if (has_float_max_len()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(41, this->float_max_len(), target);
  }

  // .qni.api.Empty DATE = 50;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        50, this->_internal_date(), deterministic, target);
  }

  // .qni.api.Empty DATETIME = 51;
  if (has_datetime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51, this->_internal_datetime(), deterministic, target);
  }

  // .qni.api.Empty TIME = 52;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        52, this->_internal_time(), deterministic, target);
  }

  // .qni.api.Empty COLOR = 60;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        60, this->_internal_color(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.InputRequest)
  return target;
}

size_t InputRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.InputRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 expire = 1;
  if (this->expire() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->expire());
  }

  switch (data_case()) {
    // .qni.api.Empty TOUCH = 10;
    case kTOUCH: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.touch_);
      break;
    }
    // .qni.api.Empty ENTER = 11;
    case kENTER: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.enter_);
      break;
    }
    // .qni.api.Empty ANYKEY = 12;
    case kANYKEY: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.anykey_);
      break;
    }
    // .qni.api.Empty BOOLEAN = 13;
    case kBOOLEAN: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.boolean_);
      break;
    }
    // .qni.api.Empty STR = 20;
    case kSTR: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.str_);
      break;
    }
    // uint32 STR_MAX_LEN = 21;
    case kSTRMAXLEN: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->str_max_len());
      break;
    }
    // .qni.api.StringArray STR_SELECT = 22;
    case kSTRSELECT: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.str_select_);
      break;
    }
    // .qni.api.Empty INT = 30;
    case kINT: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.int__);
      break;
    }
    // uint32 INT_MAX_LEN = 31;
    case kINTMAXLEN: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->int_max_len());
      break;
    }
    // .qni.api.Empty FLOAT = 40;
    case kFLOAT: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.float__);
      break;
    }
    // uint32 FLOAT_MAX_LEN = 41;
    case kFLOATMAXLEN: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->float_max_len());
      break;
    }
    // .qni.api.Empty DATE = 50;
    case kDATE: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.date_);
      break;
    }
    // .qni.api.Empty DATETIME = 51;
    case kDATETIME: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.datetime_);
      break;
    }
    // .qni.api.Empty TIME = 52;
    case kTIME: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.time_);
      break;
    }
    // .qni.api.Empty COLOR = 60;
    case kCOLOR: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.color_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.InputRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InputRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.InputRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.InputRequest)
    MergeFrom(*source);
  }
}

void InputRequest::MergeFrom(const InputRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.InputRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.expire() != 0) {
    set_expire(from.expire());
  }
  switch (from.data_case()) {
    case kTOUCH: {
      mutable_touch()->::qni::api::Empty::MergeFrom(from.touch());
      break;
    }
    case kENTER: {
      mutable_enter()->::qni::api::Empty::MergeFrom(from.enter());
      break;
    }
    case kANYKEY: {
      mutable_anykey()->::qni::api::Empty::MergeFrom(from.anykey());
      break;
    }
    case kBOOLEAN: {
      mutable_boolean()->::qni::api::Empty::MergeFrom(from.boolean());
      break;
    }
    case kSTR: {
      mutable_str()->::qni::api::Empty::MergeFrom(from.str());
      break;
    }
    case kSTRMAXLEN: {
      set_str_max_len(from.str_max_len());
      break;
    }
    case kSTRSELECT: {
      mutable_str_select()->::qni::api::StringArray::MergeFrom(from.str_select());
      break;
    }
    case kINT: {
      mutable_int_()->::qni::api::Empty::MergeFrom(from.int_());
      break;
    }
    case kINTMAXLEN: {
      set_int_max_len(from.int_max_len());
      break;
    }
    case kFLOAT: {
      mutable_float_()->::qni::api::Empty::MergeFrom(from.float_());
      break;
    }
    case kFLOATMAXLEN: {
      set_float_max_len(from.float_max_len());
      break;
    }
    case kDATE: {
      mutable_date()->::qni::api::Empty::MergeFrom(from.date());
      break;
    }
    case kDATETIME: {
      mutable_datetime()->::qni::api::Empty::MergeFrom(from.datetime());
      break;
    }
    case kTIME: {
      mutable_time()->::qni::api::Empty::MergeFrom(from.time());
      break;
    }
    case kCOLOR: {
      mutable_color()->::qni::api::Empty::MergeFrom(from.color());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void InputRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.InputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputRequest::CopyFrom(const InputRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.InputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputRequest::IsInitialized() const {
  return true;
}

void InputRequest::Swap(InputRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputRequest::InternalSwap(InputRequest* other) {
  using std::swap;
  swap(expire_, other->expire_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputRequest::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InputResponse::InitAsDefaultInstance() {
  ::qni::api::_InputResponse_default_instance_.empty_ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
  ::qni::api::_InputResponse_default_instance_.boolean_ = false;
  ::qni::api::_InputResponse_default_instance_.str_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::qni::api::_InputResponse_default_instance_.int__ = 0;
  ::qni::api::_InputResponse_default_instance_.float__ = 0;
  ::qni::api::_InputResponse_default_instance_.date_ = GOOGLE_ULONGLONG(0);
  ::qni::api::_InputResponse_default_instance_.datetime_ = GOOGLE_ULONGLONG(0);
  ::qni::api::_InputResponse_default_instance_.time_ = GOOGLE_ULONGLONG(0);
  ::qni::api::_InputResponse_default_instance_.color_ = 0u;
}
void InputResponse::set_allocated_empty(::qni::api::Empty* empty) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (empty) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      empty = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, empty, submessage_arena);
    }
    set_has_empty();
    data_.empty_ = empty;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.InputResponse.EMPTY)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputResponse::kEMPTYFieldNumber;
const int InputResponse::kBOOLEANFieldNumber;
const int InputResponse::kSTRFieldNumber;
const int InputResponse::kINTFieldNumber;
const int InputResponse::kFLOATFieldNumber;
const int InputResponse::kDATEFieldNumber;
const int InputResponse::kDATETIMEFieldNumber;
const int InputResponse::kTIMEFieldNumber;
const int InputResponse::kCOLORFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputResponse::InputResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_InputResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.InputResponse)
}
InputResponse::InputResponse(const InputResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kEMPTY: {
      mutable_empty()->::qni::api::Empty::MergeFrom(from.empty());
      break;
    }
    case kBOOLEAN: {
      set_boolean(from.boolean());
      break;
    }
    case kSTR: {
      set_str(from.str());
      break;
    }
    case kINT: {
      set_int_(from.int_());
      break;
    }
    case kFLOAT: {
      set_float_(from.float_());
      break;
    }
    case kDATE: {
      set_date(from.date());
      break;
    }
    case kDATETIME: {
      set_datetime(from.datetime());
      break;
    }
    case kTIME: {
      set_time(from.time());
      break;
    }
    case kCOLOR: {
      set_color(from.color());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qni.api.InputResponse)
}

void InputResponse::SharedCtor() {
  clear_has_data();
}

InputResponse::~InputResponse() {
  // @@protoc_insertion_point(destructor:qni.api.InputResponse)
  SharedDtor();
}

void InputResponse::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
}

void InputResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputResponse::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputResponse& InputResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_InputResponse.base);
  return *internal_default_instance();
}


void InputResponse::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:qni.api.InputResponse)
  switch (data_case()) {
    case kEMPTY: {
      delete data_.empty_;
      break;
    }
    case kBOOLEAN: {
      // No need to clear
      break;
    }
    case kSTR: {
      data_.str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kINT: {
      // No need to clear
      break;
    }
    case kFLOAT: {
      // No need to clear
      break;
    }
    case kDATE: {
      // No need to clear
      break;
    }
    case kDATETIME: {
      // No need to clear
      break;
    }
    case kTIME: {
      // No need to clear
      break;
    }
    case kCOLOR: {
      // No need to clear
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void InputResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.InputResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear();
}

bool InputResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.InputResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .qni.api.Empty EMPTY = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_empty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BOOLEAN = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &data_.boolean_)));
          set_has_boolean();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string STR = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), static_cast<int>(this->str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qni.api.InputResponse.STR"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 INT = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_.int__)));
          set_has_int_();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float FLOAT = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(189u /* 189 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &data_.float__)));
          set_has_float_();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 DATE = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_.date_)));
          set_has_date();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 DATETIME = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_.datetime_)));
          set_has_datetime();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 TIME = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_.time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 COLOR = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_.color_)));
          set_has_color();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.InputResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.InputResponse)
  return false;
#undef DO_
}

void InputResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.InputResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qni.api.Empty EMPTY = 10;
  if (has_empty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_empty(), output);
  }

  // bool BOOLEAN = 20;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->boolean(), output);
  }

  // string STR = 21;
  if (has_str()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.InputResponse.STR");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->str(), output);
  }

  // int32 INT = 22;
  if (has_int_()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->int_(), output);
  }

  // float FLOAT = 23;
  if (has_float_()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(23, this->float_(), output);
  }

  // uint64 DATE = 30;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(30, this->date(), output);
  }

  // uint64 DATETIME = 31;
  if (has_datetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(31, this->datetime(), output);
  }

  // uint64 TIME = 32;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(32, this->time(), output);
  }

  // uint32 COLOR = 40;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->color(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.InputResponse)
}

::google::protobuf::uint8* InputResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.InputResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qni.api.Empty EMPTY = 10;
  if (has_empty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_empty(), deterministic, target);
  }

  // bool BOOLEAN = 20;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->boolean(), target);
  }

  // string STR = 21;
  if (has_str()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.InputResponse.STR");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->str(), target);
  }

  // int32 INT = 22;
  if (has_int_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->int_(), target);
  }

  // float FLOAT = 23;
  if (has_float_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(23, this->float_(), target);
  }

  // uint64 DATE = 30;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(30, this->date(), target);
  }

  // uint64 DATETIME = 31;
  if (has_datetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(31, this->datetime(), target);
  }

  // uint64 TIME = 32;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(32, this->time(), target);
  }

  // uint32 COLOR = 40;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(40, this->color(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.InputResponse)
  return target;
}

size_t InputResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.InputResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (data_case()) {
    // .qni.api.Empty EMPTY = 10;
    case kEMPTY: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.empty_);
      break;
    }
    // bool BOOLEAN = 20;
    case kBOOLEAN: {
      total_size += 2 + 1;
      break;
    }
    // string STR = 21;
    case kSTR: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
      break;
    }
    // int32 INT = 22;
    case kINT: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int_());
      break;
    }
    // float FLOAT = 23;
    case kFLOAT: {
      total_size += 2 + 4;
      break;
    }
    // uint64 DATE = 30;
    case kDATE: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->date());
      break;
    }
    // uint64 DATETIME = 31;
    case kDATETIME: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->datetime());
      break;
    }
    // uint64 TIME = 32;
    case kTIME: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time());
      break;
    }
    // uint32 COLOR = 40;
    case kCOLOR: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->color());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.InputResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InputResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.InputResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.InputResponse)
    MergeFrom(*source);
  }
}

void InputResponse::MergeFrom(const InputResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.InputResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kEMPTY: {
      mutable_empty()->::qni::api::Empty::MergeFrom(from.empty());
      break;
    }
    case kBOOLEAN: {
      set_boolean(from.boolean());
      break;
    }
    case kSTR: {
      set_str(from.str());
      break;
    }
    case kINT: {
      set_int_(from.int_());
      break;
    }
    case kFLOAT: {
      set_float_(from.float_());
      break;
    }
    case kDATE: {
      set_date(from.date());
      break;
    }
    case kDATETIME: {
      set_datetime(from.datetime());
      break;
    }
    case kTIME: {
      set_time(from.time());
      break;
    }
    case kCOLOR: {
      set_color(from.color());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void InputResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.InputResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputResponse::CopyFrom(const InputResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.InputResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputResponse::IsInitialized() const {
  return true;
}

void InputResponse::Swap(InputResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputResponse::InternalSwap(InputResponse* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputResponse::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConsolePrintButtonData::InitAsDefaultInstance() {
  ::qni::api::_ConsolePrintButtonData_default_instance_._instance.get_mutable()->value_ = const_cast< ::qni::api::InputResponse*>(
      ::qni::api::InputResponse::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConsolePrintButtonData::kValueFieldNumber;
const int ConsolePrintButtonData::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConsolePrintButtonData::ConsolePrintButtonData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_ConsolePrintButtonData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.ConsolePrintButtonData)
}
ConsolePrintButtonData::ConsolePrintButtonData(const ConsolePrintButtonData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_value()) {
    value_ = new ::qni::api::InputResponse(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:qni.api.ConsolePrintButtonData)
}

void ConsolePrintButtonData::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
}

ConsolePrintButtonData::~ConsolePrintButtonData() {
  // @@protoc_insertion_point(destructor:qni.api.ConsolePrintButtonData)
  SharedDtor();
}

void ConsolePrintButtonData::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void ConsolePrintButtonData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConsolePrintButtonData::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConsolePrintButtonData& ConsolePrintButtonData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_ConsolePrintButtonData.base);
  return *internal_default_instance();
}


void ConsolePrintButtonData::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.ConsolePrintButtonData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool ConsolePrintButtonData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.ConsolePrintButtonData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .qni.api.InputResponse value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qni.api.ConsolePrintButtonData.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.ConsolePrintButtonData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.ConsolePrintButtonData)
  return false;
#undef DO_
}

void ConsolePrintButtonData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.ConsolePrintButtonData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qni.api.InputResponse value = 1;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_value(), output);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ConsolePrintButtonData.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.ConsolePrintButtonData)
}

::google::protobuf::uint8* ConsolePrintButtonData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.ConsolePrintButtonData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qni.api.InputResponse value = 1;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_value(), deterministic, target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ConsolePrintButtonData.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.ConsolePrintButtonData)
  return target;
}

size_t ConsolePrintButtonData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.ConsolePrintButtonData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // .qni.api.InputResponse value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsolePrintButtonData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.ConsolePrintButtonData)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsolePrintButtonData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConsolePrintButtonData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.ConsolePrintButtonData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.ConsolePrintButtonData)
    MergeFrom(*source);
  }
}

void ConsolePrintButtonData::MergeFrom(const ConsolePrintButtonData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.ConsolePrintButtonData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_value()) {
    mutable_value()->::qni::api::InputResponse::MergeFrom(from.value());
  }
}

void ConsolePrintButtonData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.ConsolePrintButtonData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsolePrintButtonData::CopyFrom(const ConsolePrintButtonData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.ConsolePrintButtonData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsolePrintButtonData::IsInitialized() const {
  return true;
}

void ConsolePrintButtonData::Swap(ConsolePrintButtonData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConsolePrintButtonData::InternalSwap(ConsolePrintButtonData* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConsolePrintButtonData::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConsolePrintData::InitAsDefaultInstance() {
  ::qni::api::_ConsolePrintData_default_instance_.print_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::qni::api::_ConsolePrintData_default_instance_.print_line_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::qni::api::_ConsolePrintData_default_instance_.print_button_ = const_cast< ::qni::api::ConsolePrintButtonData*>(
      ::qni::api::ConsolePrintButtonData::internal_default_instance());
  ::qni::api::_ConsolePrintData_default_instance_.new_line_ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
  ::qni::api::_ConsolePrintData_default_instance_.delete_line_ = 0u;
  ::qni::api::_ConsolePrintData_default_instance_.clear_line_ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
}
void ConsolePrintData::set_allocated_print_button(::qni::api::ConsolePrintButtonData* print_button) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (print_button) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      print_button = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, print_button, submessage_arena);
    }
    set_has_print_button();
    data_.print_button_ = print_button;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ConsolePrintData.PRINT_BUTTON)
}
void ConsolePrintData::set_allocated_new_line(::qni::api::Empty* new_line) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (new_line) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      new_line = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, new_line, submessage_arena);
    }
    set_has_new_line();
    data_.new_line_ = new_line;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ConsolePrintData.NEW_LINE)
}
void ConsolePrintData::set_allocated_clear_line(::qni::api::Empty* clear_line) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (clear_line) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clear_line = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clear_line, submessage_arena);
    }
    set_has_clear_line();
    data_.clear_line_ = clear_line;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ConsolePrintData.CLEAR_LINE)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConsolePrintData::kPRINTFieldNumber;
const int ConsolePrintData::kPRINTLINEFieldNumber;
const int ConsolePrintData::kPRINTBUTTONFieldNumber;
const int ConsolePrintData::kNEWLINEFieldNumber;
const int ConsolePrintData::kDELETELINEFieldNumber;
const int ConsolePrintData::kCLEARLINEFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConsolePrintData::ConsolePrintData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_ConsolePrintData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.ConsolePrintData)
}
ConsolePrintData::ConsolePrintData(const ConsolePrintData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kPRINT: {
      set_print(from.print());
      break;
    }
    case kPRINTLINE: {
      set_print_line(from.print_line());
      break;
    }
    case kPRINTBUTTON: {
      mutable_print_button()->::qni::api::ConsolePrintButtonData::MergeFrom(from.print_button());
      break;
    }
    case kNEWLINE: {
      mutable_new_line()->::qni::api::Empty::MergeFrom(from.new_line());
      break;
    }
    case kDELETELINE: {
      set_delete_line(from.delete_line());
      break;
    }
    case kCLEARLINE: {
      mutable_clear_line()->::qni::api::Empty::MergeFrom(from.clear_line());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qni.api.ConsolePrintData)
}

void ConsolePrintData::SharedCtor() {
  clear_has_data();
}

ConsolePrintData::~ConsolePrintData() {
  // @@protoc_insertion_point(destructor:qni.api.ConsolePrintData)
  SharedDtor();
}

void ConsolePrintData::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
}

void ConsolePrintData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConsolePrintData::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConsolePrintData& ConsolePrintData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_ConsolePrintData.base);
  return *internal_default_instance();
}


void ConsolePrintData::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:qni.api.ConsolePrintData)
  switch (data_case()) {
    case kPRINT: {
      data_.print_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kPRINTLINE: {
      data_.print_line_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kPRINTBUTTON: {
      delete data_.print_button_;
      break;
    }
    case kNEWLINE: {
      delete data_.new_line_;
      break;
    }
    case kDELETELINE: {
      // No need to clear
      break;
    }
    case kCLEARLINE: {
      delete data_.clear_line_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void ConsolePrintData::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.ConsolePrintData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear();
}

bool ConsolePrintData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.ConsolePrintData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string PRINT = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_print()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->print().data(), static_cast<int>(this->print().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qni.api.ConsolePrintData.PRINT"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PRINT_LINE = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_print_line()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->print_line().data(), static_cast<int>(this->print_line().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qni.api.ConsolePrintData.PRINT_LINE"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.ConsolePrintButtonData PRINT_BUTTON = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_print_button()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Empty NEW_LINE = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_new_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DELETE_LINE = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_.delete_line_)));
          set_has_delete_line();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Empty CLEAR_LINE = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clear_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.ConsolePrintData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.ConsolePrintData)
  return false;
#undef DO_
}

void ConsolePrintData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.ConsolePrintData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PRINT = 10;
  if (has_print()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->print().data(), static_cast<int>(this->print().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ConsolePrintData.PRINT");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->print(), output);
  }

  // string PRINT_LINE = 11;
  if (has_print_line()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->print_line().data(), static_cast<int>(this->print_line().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ConsolePrintData.PRINT_LINE");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->print_line(), output);
  }

  // .qni.api.ConsolePrintButtonData PRINT_BUTTON = 12;
  if (has_print_button()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_print_button(), output);
  }

  // .qni.api.Empty NEW_LINE = 20;
  if (has_new_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_new_line(), output);
  }

  // uint32 DELETE_LINE = 30;
  if (has_delete_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->delete_line(), output);
  }

  // .qni.api.Empty CLEAR_LINE = 31;
  if (has_clear_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->_internal_clear_line(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.ConsolePrintData)
}

::google::protobuf::uint8* ConsolePrintData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.ConsolePrintData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PRINT = 10;
  if (has_print()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->print().data(), static_cast<int>(this->print().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ConsolePrintData.PRINT");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->print(), target);
  }

  // string PRINT_LINE = 11;
  if (has_print_line()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->print_line().data(), static_cast<int>(this->print_line().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ConsolePrintData.PRINT_LINE");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->print_line(), target);
  }

  // .qni.api.ConsolePrintButtonData PRINT_BUTTON = 12;
  if (has_print_button()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_print_button(), deterministic, target);
  }

  // .qni.api.Empty NEW_LINE = 20;
  if (has_new_line()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_new_line(), deterministic, target);
  }

  // uint32 DELETE_LINE = 30;
  if (has_delete_line()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->delete_line(), target);
  }

  // .qni.api.Empty CLEAR_LINE = 31;
  if (has_clear_line()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->_internal_clear_line(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.ConsolePrintData)
  return target;
}

size_t ConsolePrintData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.ConsolePrintData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (data_case()) {
    // string PRINT = 10;
    case kPRINT: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->print());
      break;
    }
    // string PRINT_LINE = 11;
    case kPRINTLINE: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->print_line());
      break;
    }
    // .qni.api.ConsolePrintButtonData PRINT_BUTTON = 12;
    case kPRINTBUTTON: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.print_button_);
      break;
    }
    // .qni.api.Empty NEW_LINE = 20;
    case kNEWLINE: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.new_line_);
      break;
    }
    // uint32 DELETE_LINE = 30;
    case kDELETELINE: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->delete_line());
      break;
    }
    // .qni.api.Empty CLEAR_LINE = 31;
    case kCLEARLINE: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.clear_line_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsolePrintData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.ConsolePrintData)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsolePrintData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConsolePrintData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.ConsolePrintData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.ConsolePrintData)
    MergeFrom(*source);
  }
}

void ConsolePrintData::MergeFrom(const ConsolePrintData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.ConsolePrintData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kPRINT: {
      set_print(from.print());
      break;
    }
    case kPRINTLINE: {
      set_print_line(from.print_line());
      break;
    }
    case kPRINTBUTTON: {
      mutable_print_button()->::qni::api::ConsolePrintButtonData::MergeFrom(from.print_button());
      break;
    }
    case kNEWLINE: {
      mutable_new_line()->::qni::api::Empty::MergeFrom(from.new_line());
      break;
    }
    case kDELETELINE: {
      set_delete_line(from.delete_line());
      break;
    }
    case kCLEARLINE: {
      mutable_clear_line()->::qni::api::Empty::MergeFrom(from.clear_line());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void ConsolePrintData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.ConsolePrintData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsolePrintData::CopyFrom(const ConsolePrintData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.ConsolePrintData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsolePrintData::IsInitialized() const {
  return true;
}

void ConsolePrintData::Swap(ConsolePrintData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConsolePrintData::InternalSwap(ConsolePrintData* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConsolePrintData::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Font::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Font::kFontFamilyFieldNumber;
const int Font::kFontSizeFieldNumber;
const int Font::kFontStyleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Font::Font()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_Font.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.Font)
}
Font::Font(const Font& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  font_family_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.font_family().size() > 0) {
    font_family_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.font_family_);
  }
  ::memcpy(&font_size_, &from.font_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&font_style_) -
    reinterpret_cast<char*>(&font_size_)) + sizeof(font_style_));
  // @@protoc_insertion_point(copy_constructor:qni.api.Font)
}

void Font::SharedCtor() {
  font_family_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&font_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&font_style_) -
      reinterpret_cast<char*>(&font_size_)) + sizeof(font_style_));
}

Font::~Font() {
  // @@protoc_insertion_point(destructor:qni.api.Font)
  SharedDtor();
}

void Font::SharedDtor() {
  font_family_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Font::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Font::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Font& Font::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_Font.base);
  return *internal_default_instance();
}


void Font::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.Font)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  font_family_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&font_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&font_style_) -
      reinterpret_cast<char*>(&font_size_)) + sizeof(font_style_));
  _internal_metadata_.Clear();
}

bool Font::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.Font)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string font_family = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_font_family()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->font_family().data(), static_cast<int>(this->font_family().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qni.api.Font.font_family"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float font_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &font_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 font_style = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &font_style_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.Font)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.Font)
  return false;
#undef DO_
}

void Font::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.Font)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string font_family = 1;
  if (this->font_family().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->font_family().data(), static_cast<int>(this->font_family().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.Font.font_family");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->font_family(), output);
  }

  // float font_size = 2;
  if (this->font_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->font_size(), output);
  }

  // uint32 font_style = 3;
  if (this->font_style() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->font_style(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.Font)
}

::google::protobuf::uint8* Font::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.Font)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string font_family = 1;
  if (this->font_family().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->font_family().data(), static_cast<int>(this->font_family().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.Font.font_family");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->font_family(), target);
  }

  // float font_size = 2;
  if (this->font_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->font_size(), target);
  }

  // uint32 font_style = 3;
  if (this->font_style() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->font_style(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.Font)
  return target;
}

size_t Font::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.Font)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string font_family = 1;
  if (this->font_family().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->font_family());
  }

  // float font_size = 2;
  if (this->font_size() != 0) {
    total_size += 1 + 4;
  }

  // uint32 font_style = 3;
  if (this->font_style() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->font_style());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Font::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.Font)
  GOOGLE_DCHECK_NE(&from, this);
  const Font* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Font>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.Font)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.Font)
    MergeFrom(*source);
  }
}

void Font::MergeFrom(const Font& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.Font)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.font_family().size() > 0) {

    font_family_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.font_family_);
  }
  if (from.font_size() != 0) {
    set_font_size(from.font_size());
  }
  if (from.font_style() != 0) {
    set_font_style(from.font_style());
  }
}

void Font::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.Font)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Font::CopyFrom(const Font& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.Font)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Font::IsInitialized() const {
  return true;
}

void Font::Swap(Font* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Font::InternalSwap(Font* other) {
  using std::swap;
  font_family_.Swap(&other->font_family_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(font_size_, other->font_size_);
  swap(font_style_, other->font_style_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Font::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConsoleSettingItem::InitAsDefaultInstance() {
  ::qni::api::_ConsoleSettingItem_default_instance_.text_color_ = 0u;
  ::qni::api::_ConsoleSettingItem_default_instance_.back_color_ = 0u;
  ::qni::api::_ConsoleSettingItem_default_instance_.highlight_color_ = 0u;
  ::qni::api::_ConsoleSettingItem_default_instance_.font_ = const_cast< ::qni::api::Font*>(
      ::qni::api::Font::internal_default_instance());
  ::qni::api::_ConsoleSettingItem_default_instance_.text_align_ = 0;
}
void ConsoleSettingItem::set_allocated_font(::qni::api::Font* font) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (font) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      font = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, font, submessage_arena);
    }
    set_has_font();
    data_.font_ = font;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ConsoleSettingItem.FONT)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConsoleSettingItem::kTEXTCOLORFieldNumber;
const int ConsoleSettingItem::kBACKCOLORFieldNumber;
const int ConsoleSettingItem::kHIGHLIGHTCOLORFieldNumber;
const int ConsoleSettingItem::kFONTFieldNumber;
const int ConsoleSettingItem::kTEXTALIGNFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConsoleSettingItem::ConsoleSettingItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_ConsoleSettingItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.ConsoleSettingItem)
}
ConsoleSettingItem::ConsoleSettingItem(const ConsoleSettingItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kTEXTCOLOR: {
      set_text_color(from.text_color());
      break;
    }
    case kBACKCOLOR: {
      set_back_color(from.back_color());
      break;
    }
    case kHIGHLIGHTCOLOR: {
      set_highlight_color(from.highlight_color());
      break;
    }
    case kFONT: {
      mutable_font()->::qni::api::Font::MergeFrom(from.font());
      break;
    }
    case kTEXTALIGN: {
      set_text_align(from.text_align());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qni.api.ConsoleSettingItem)
}

void ConsoleSettingItem::SharedCtor() {
  clear_has_data();
}

ConsoleSettingItem::~ConsoleSettingItem() {
  // @@protoc_insertion_point(destructor:qni.api.ConsoleSettingItem)
  SharedDtor();
}

void ConsoleSettingItem::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
}

void ConsoleSettingItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConsoleSettingItem::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConsoleSettingItem& ConsoleSettingItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_ConsoleSettingItem.base);
  return *internal_default_instance();
}


void ConsoleSettingItem::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:qni.api.ConsoleSettingItem)
  switch (data_case()) {
    case kTEXTCOLOR: {
      // No need to clear
      break;
    }
    case kBACKCOLOR: {
      // No need to clear
      break;
    }
    case kHIGHLIGHTCOLOR: {
      // No need to clear
      break;
    }
    case kFONT: {
      delete data_.font_;
      break;
    }
    case kTEXTALIGN: {
      // No need to clear
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void ConsoleSettingItem::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.ConsoleSettingItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear();
}

bool ConsoleSettingItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.ConsoleSettingItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 TEXT_COLOR = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_.text_color_)));
          set_has_text_color();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BACK_COLOR = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_.back_color_)));
          set_has_back_color();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 HIGHLIGHT_COLOR = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_.highlight_color_)));
          set_has_highlight_color();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Font FONT = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_font()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.TextAlign TEXT_ALIGN = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_text_align(static_cast< ::qni::api::TextAlign >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.ConsoleSettingItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.ConsoleSettingItem)
  return false;
#undef DO_
}

void ConsoleSettingItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.ConsoleSettingItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TEXT_COLOR = 10;
  if (has_text_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->text_color(), output);
  }

  // uint32 BACK_COLOR = 11;
  if (has_back_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->back_color(), output);
  }

  // uint32 HIGHLIGHT_COLOR = 12;
  if (has_highlight_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->highlight_color(), output);
  }

  // .qni.api.Font FONT = 20;
  if (has_font()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_font(), output);
  }

  // .qni.api.TextAlign TEXT_ALIGN = 21;
  if (has_text_align()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->text_align(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.ConsoleSettingItem)
}

::google::protobuf::uint8* ConsoleSettingItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.ConsoleSettingItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TEXT_COLOR = 10;
  if (has_text_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->text_color(), target);
  }

  // uint32 BACK_COLOR = 11;
  if (has_back_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->back_color(), target);
  }

  // uint32 HIGHLIGHT_COLOR = 12;
  if (has_highlight_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->highlight_color(), target);
  }

  // .qni.api.Font FONT = 20;
  if (has_font()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_font(), deterministic, target);
  }

  // .qni.api.TextAlign TEXT_ALIGN = 21;
  if (has_text_align()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->text_align(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.ConsoleSettingItem)
  return target;
}

size_t ConsoleSettingItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.ConsoleSettingItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (data_case()) {
    // uint32 TEXT_COLOR = 10;
    case kTEXTCOLOR: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->text_color());
      break;
    }
    // uint32 BACK_COLOR = 11;
    case kBACKCOLOR: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->back_color());
      break;
    }
    // uint32 HIGHLIGHT_COLOR = 12;
    case kHIGHLIGHTCOLOR: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->highlight_color());
      break;
    }
    // .qni.api.Font FONT = 20;
    case kFONT: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.font_);
      break;
    }
    // .qni.api.TextAlign TEXT_ALIGN = 21;
    case kTEXTALIGN: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->text_align());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsoleSettingItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.ConsoleSettingItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsoleSettingItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConsoleSettingItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.ConsoleSettingItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.ConsoleSettingItem)
    MergeFrom(*source);
  }
}

void ConsoleSettingItem::MergeFrom(const ConsoleSettingItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.ConsoleSettingItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kTEXTCOLOR: {
      set_text_color(from.text_color());
      break;
    }
    case kBACKCOLOR: {
      set_back_color(from.back_color());
      break;
    }
    case kHIGHLIGHTCOLOR: {
      set_highlight_color(from.highlight_color());
      break;
    }
    case kFONT: {
      mutable_font()->::qni::api::Font::MergeFrom(from.font());
      break;
    }
    case kTEXTALIGN: {
      set_text_align(from.text_align());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void ConsoleSettingItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.ConsoleSettingItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsoleSettingItem::CopyFrom(const ConsoleSettingItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.ConsoleSettingItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsoleSettingItem::IsInitialized() const {
  return true;
}

void ConsoleSettingItem::Swap(ConsoleSettingItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConsoleSettingItem::InternalSwap(ConsoleSettingItem* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConsoleSettingItem::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConsoleRequest::InitAsDefaultInstance() {
  ::qni::api::_ConsoleRequest_default_instance_.load_state_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::qni::api::_ConsoleRequest_default_instance_.share_state_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::qni::api::_ConsoleRequest_default_instance_.share_state_overwrite_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::qni::api::_ConsoleRequest_default_instance_.delete_state_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::qni::api::_ConsoleRequest_default_instance_.get_state_ = GOOGLE_ULONGLONG(0);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConsoleRequest::kLOADSTATEFieldNumber;
const int ConsoleRequest::kSHARESTATEFieldNumber;
const int ConsoleRequest::kSHARESTATEOVERWRITEFieldNumber;
const int ConsoleRequest::kDELETESTATEFieldNumber;
const int ConsoleRequest::kGETSTATEFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConsoleRequest::ConsoleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_ConsoleRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.ConsoleRequest)
}
ConsoleRequest::ConsoleRequest(const ConsoleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kLOADSTATE: {
      set_load_state(from.load_state());
      break;
    }
    case kSHARESTATE: {
      set_share_state(from.share_state());
      break;
    }
    case kSHARESTATEOVERWRITE: {
      set_share_state_overwrite(from.share_state_overwrite());
      break;
    }
    case kDELETESTATE: {
      set_delete_state(from.delete_state());
      break;
    }
    case kGETSTATE: {
      set_get_state(from.get_state());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qni.api.ConsoleRequest)
}

void ConsoleRequest::SharedCtor() {
  clear_has_data();
}

ConsoleRequest::~ConsoleRequest() {
  // @@protoc_insertion_point(destructor:qni.api.ConsoleRequest)
  SharedDtor();
}

void ConsoleRequest::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
}

void ConsoleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConsoleRequest::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConsoleRequest& ConsoleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_ConsoleRequest.base);
  return *internal_default_instance();
}


void ConsoleRequest::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:qni.api.ConsoleRequest)
  switch (data_case()) {
    case kLOADSTATE: {
      data_.load_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSHARESTATE: {
      data_.share_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSHARESTATEOVERWRITE: {
      data_.share_state_overwrite_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kDELETESTATE: {
      data_.delete_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kGETSTATE: {
      // No need to clear
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void ConsoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.ConsoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear();
}

bool ConsoleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.ConsoleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string LOAD_STATE = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_load_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->load_state().data(), static_cast<int>(this->load_state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qni.api.ConsoleRequest.LOAD_STATE"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SHARE_STATE = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_share_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->share_state().data(), static_cast<int>(this->share_state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qni.api.ConsoleRequest.SHARE_STATE"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SHARE_STATE_OVERWRITE = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_share_state_overwrite()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->share_state_overwrite().data(), static_cast<int>(this->share_state_overwrite().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qni.api.ConsoleRequest.SHARE_STATE_OVERWRITE"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DELETE_STATE = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_delete_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->delete_state().data(), static_cast<int>(this->delete_state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qni.api.ConsoleRequest.DELETE_STATE"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 GET_STATE = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_.get_state_)));
          set_has_get_state();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.ConsoleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.ConsoleRequest)
  return false;
#undef DO_
}

void ConsoleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.ConsoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string LOAD_STATE = 10;
  if (has_load_state()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->load_state().data(), static_cast<int>(this->load_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ConsoleRequest.LOAD_STATE");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->load_state(), output);
  }

  // string SHARE_STATE = 11;
  if (has_share_state()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->share_state().data(), static_cast<int>(this->share_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ConsoleRequest.SHARE_STATE");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->share_state(), output);
  }

  // string SHARE_STATE_OVERWRITE = 12;
  if (has_share_state_overwrite()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->share_state_overwrite().data(), static_cast<int>(this->share_state_overwrite().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ConsoleRequest.SHARE_STATE_OVERWRITE");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->share_state_overwrite(), output);
  }

  // string DELETE_STATE = 13;
  if (has_delete_state()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delete_state().data(), static_cast<int>(this->delete_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ConsoleRequest.DELETE_STATE");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->delete_state(), output);
  }

  // uint64 GET_STATE = 20;
  if (has_get_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(20, this->get_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.ConsoleRequest)
}

::google::protobuf::uint8* ConsoleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.ConsoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string LOAD_STATE = 10;
  if (has_load_state()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->load_state().data(), static_cast<int>(this->load_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ConsoleRequest.LOAD_STATE");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->load_state(), target);
  }

  // string SHARE_STATE = 11;
  if (has_share_state()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->share_state().data(), static_cast<int>(this->share_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ConsoleRequest.SHARE_STATE");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->share_state(), target);
  }

  // string SHARE_STATE_OVERWRITE = 12;
  if (has_share_state_overwrite()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->share_state_overwrite().data(), static_cast<int>(this->share_state_overwrite().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ConsoleRequest.SHARE_STATE_OVERWRITE");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->share_state_overwrite(), target);
  }

  // string DELETE_STATE = 13;
  if (has_delete_state()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delete_state().data(), static_cast<int>(this->delete_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ConsoleRequest.DELETE_STATE");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->delete_state(), target);
  }

  // uint64 GET_STATE = 20;
  if (has_get_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(20, this->get_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.ConsoleRequest)
  return target;
}

size_t ConsoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.ConsoleRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (data_case()) {
    // string LOAD_STATE = 10;
    case kLOADSTATE: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->load_state());
      break;
    }
    // string SHARE_STATE = 11;
    case kSHARESTATE: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->share_state());
      break;
    }
    // string SHARE_STATE_OVERWRITE = 12;
    case kSHARESTATEOVERWRITE: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->share_state_overwrite());
      break;
    }
    // string DELETE_STATE = 13;
    case kDELETESTATE: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->delete_state());
      break;
    }
    // uint64 GET_STATE = 20;
    case kGETSTATE: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->get_state());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsoleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.ConsoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsoleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConsoleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.ConsoleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.ConsoleRequest)
    MergeFrom(*source);
  }
}

void ConsoleRequest::MergeFrom(const ConsoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.ConsoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kLOADSTATE: {
      set_load_state(from.load_state());
      break;
    }
    case kSHARESTATE: {
      set_share_state(from.share_state());
      break;
    }
    case kSHARESTATEOVERWRITE: {
      set_share_state_overwrite(from.share_state_overwrite());
      break;
    }
    case kDELETESTATE: {
      set_delete_state(from.delete_state());
      break;
    }
    case kGETSTATE: {
      set_get_state(from.get_state());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void ConsoleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.ConsoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsoleRequest::CopyFrom(const ConsoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.ConsoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsoleRequest::IsInitialized() const {
  return true;
}

void ConsoleRequest::Swap(ConsoleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConsoleRequest::InternalSwap(ConsoleRequest* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConsoleRequest::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConsoleResponse::InitAsDefaultInstance() {
  ::qni::api::_ConsoleResponse_default_instance_.ok_input_ = const_cast< ::qni::api::InputResponse*>(
      ::qni::api::InputResponse::internal_default_instance());
  ::qni::api::_ConsoleResponse_default_instance_.err_ = const_cast< ::qni::api::ErrorResponse*>(
      ::qni::api::ErrorResponse::internal_default_instance());
}
void ConsoleResponse::set_allocated_ok_input(::qni::api::InputResponse* ok_input) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (ok_input) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ok_input = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ok_input, submessage_arena);
    }
    set_has_ok_input();
    data_.ok_input_ = ok_input;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ConsoleResponse.OK_INPUT)
}
void ConsoleResponse::set_allocated_err(::qni::api::ErrorResponse* err) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (err) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      err = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, err, submessage_arena);
    }
    set_has_err();
    data_.err_ = err;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ConsoleResponse.ERR)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConsoleResponse::kTagFieldNumber;
const int ConsoleResponse::kOKINPUTFieldNumber;
const int ConsoleResponse::kERRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConsoleResponse::ConsoleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_ConsoleResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.ConsoleResponse)
}
ConsoleResponse::ConsoleResponse(const ConsoleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_ = from.tag_;
  clear_has_data();
  switch (from.data_case()) {
    case kOKINPUT: {
      mutable_ok_input()->::qni::api::InputResponse::MergeFrom(from.ok_input());
      break;
    }
    case kERR: {
      mutable_err()->::qni::api::ErrorResponse::MergeFrom(from.err());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qni.api.ConsoleResponse)
}

void ConsoleResponse::SharedCtor() {
  tag_ = 0u;
  clear_has_data();
}

ConsoleResponse::~ConsoleResponse() {
  // @@protoc_insertion_point(destructor:qni.api.ConsoleResponse)
  SharedDtor();
}

void ConsoleResponse::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
}

void ConsoleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConsoleResponse::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConsoleResponse& ConsoleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_ConsoleResponse.base);
  return *internal_default_instance();
}


void ConsoleResponse::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:qni.api.ConsoleResponse)
  switch (data_case()) {
    case kOKINPUT: {
      delete data_.ok_input_;
      break;
    }
    case kERR: {
      delete data_.err_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void ConsoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.ConsoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tag_ = 0u;
  clear_data();
  _internal_metadata_.Clear();
}

bool ConsoleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.ConsoleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 tag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.InputResponse OK_INPUT = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ok_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.ErrorResponse ERR = 255;
      case 255: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 2042 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.ConsoleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.ConsoleResponse)
  return false;
#undef DO_
}

void ConsoleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.ConsoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 tag = 1;
  if (this->tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tag(), output);
  }

  // .qni.api.InputResponse OK_INPUT = 10;
  if (has_ok_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_ok_input(), output);
  }

  // .qni.api.ErrorResponse ERR = 255;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      255, this->_internal_err(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.ConsoleResponse)
}

::google::protobuf::uint8* ConsoleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.ConsoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 tag = 1;
  if (this->tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tag(), target);
  }

  // .qni.api.InputResponse OK_INPUT = 10;
  if (has_ok_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_ok_input(), deterministic, target);
  }

  // .qni.api.ErrorResponse ERR = 255;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        255, this->_internal_err(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.ConsoleResponse)
  return target;
}

size_t ConsoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.ConsoleResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 tag = 1;
  if (this->tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tag());
  }

  switch (data_case()) {
    // .qni.api.InputResponse OK_INPUT = 10;
    case kOKINPUT: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.ok_input_);
      break;
    }
    // .qni.api.ErrorResponse ERR = 255;
    case kERR: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.err_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsoleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.ConsoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsoleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConsoleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.ConsoleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.ConsoleResponse)
    MergeFrom(*source);
  }
}

void ConsoleResponse::MergeFrom(const ConsoleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.ConsoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tag() != 0) {
    set_tag(from.tag());
  }
  switch (from.data_case()) {
    case kOKINPUT: {
      mutable_ok_input()->::qni::api::InputResponse::MergeFrom(from.ok_input());
      break;
    }
    case kERR: {
      mutable_err()->::qni::api::ErrorResponse::MergeFrom(from.err());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void ConsoleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.ConsoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsoleResponse::CopyFrom(const ConsoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.ConsoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsoleResponse::IsInitialized() const {
  return true;
}

void ConsoleResponse::Swap(ConsoleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConsoleResponse::InternalSwap(ConsoleResponse* other) {
  using std::swap;
  swap(tag_, other->tag_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConsoleResponse::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConsoleMessage::InitAsDefaultInstance() {
  ::qni::api::_ConsoleMessage_default_instance_.req_ = const_cast< ::qni::api::ConsoleRequest*>(
      ::qni::api::ConsoleRequest::internal_default_instance());
  ::qni::api::_ConsoleMessage_default_instance_.res_ = const_cast< ::qni::api::ConsoleResponse*>(
      ::qni::api::ConsoleResponse::internal_default_instance());
}
void ConsoleMessage::set_allocated_req(::qni::api::ConsoleRequest* req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (req) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    set_has_req();
    data_.req_ = req;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ConsoleMessage.REQ)
}
void ConsoleMessage::set_allocated_res(::qni::api::ConsoleResponse* res) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (res) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      res = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, res, submessage_arena);
    }
    set_has_res();
    data_.res_ = res;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ConsoleMessage.RES)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConsoleMessage::kREQFieldNumber;
const int ConsoleMessage::kRESFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConsoleMessage::ConsoleMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_ConsoleMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.ConsoleMessage)
}
ConsoleMessage::ConsoleMessage(const ConsoleMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kREQ: {
      mutable_req()->::qni::api::ConsoleRequest::MergeFrom(from.req());
      break;
    }
    case kRES: {
      mutable_res()->::qni::api::ConsoleResponse::MergeFrom(from.res());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qni.api.ConsoleMessage)
}

void ConsoleMessage::SharedCtor() {
  clear_has_data();
}

ConsoleMessage::~ConsoleMessage() {
  // @@protoc_insertion_point(destructor:qni.api.ConsoleMessage)
  SharedDtor();
}

void ConsoleMessage::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
}

void ConsoleMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConsoleMessage::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConsoleMessage& ConsoleMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_ConsoleMessage.base);
  return *internal_default_instance();
}


void ConsoleMessage::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:qni.api.ConsoleMessage)
  switch (data_case()) {
    case kREQ: {
      delete data_.req_;
      break;
    }
    case kRES: {
      delete data_.res_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void ConsoleMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.ConsoleMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear();
}

bool ConsoleMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.ConsoleMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .qni.api.ConsoleRequest REQ = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.ConsoleResponse RES = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.ConsoleMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.ConsoleMessage)
  return false;
#undef DO_
}

void ConsoleMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.ConsoleMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qni.api.ConsoleRequest REQ = 10;
  if (has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_req(), output);
  }

  // .qni.api.ConsoleResponse RES = 11;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_res(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.ConsoleMessage)
}

::google::protobuf::uint8* ConsoleMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.ConsoleMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qni.api.ConsoleRequest REQ = 10;
  if (has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_req(), deterministic, target);
  }

  // .qni.api.ConsoleResponse RES = 11;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_res(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.ConsoleMessage)
  return target;
}

size_t ConsoleMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.ConsoleMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (data_case()) {
    // .qni.api.ConsoleRequest REQ = 10;
    case kREQ: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.req_);
      break;
    }
    // .qni.api.ConsoleResponse RES = 11;
    case kRES: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.res_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsoleMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.ConsoleMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsoleMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConsoleMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.ConsoleMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.ConsoleMessage)
    MergeFrom(*source);
  }
}

void ConsoleMessage::MergeFrom(const ConsoleMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.ConsoleMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kREQ: {
      mutable_req()->::qni::api::ConsoleRequest::MergeFrom(from.req());
      break;
    }
    case kRES: {
      mutable_res()->::qni::api::ConsoleResponse::MergeFrom(from.res());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void ConsoleMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.ConsoleMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsoleMessage::CopyFrom(const ConsoleMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.ConsoleMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsoleMessage::IsInitialized() const {
  return true;
}

void ConsoleMessage::Swap(ConsoleMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConsoleMessage::InternalSwap(ConsoleMessage* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConsoleMessage::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProgramCommand::InitAsDefaultInstance() {
  ::qni::api::_ProgramCommand_default_instance_.print_ = const_cast< ::qni::api::ConsolePrintData*>(
      ::qni::api::ConsolePrintData::internal_default_instance());
  ::qni::api::_ProgramCommand_default_instance_.update_setting_ = const_cast< ::qni::api::ConsoleSettingItem*>(
      ::qni::api::ConsoleSettingItem::internal_default_instance());
}
void ProgramCommand::set_allocated_print(::qni::api::ConsolePrintData* print) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (print) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      print = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, print, submessage_arena);
    }
    set_has_print();
    data_.print_ = print;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ProgramCommand.PRINT)
}
void ProgramCommand::set_allocated_update_setting(::qni::api::ConsoleSettingItem* update_setting) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (update_setting) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_setting = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_setting, submessage_arena);
    }
    set_has_update_setting();
    data_.update_setting_ = update_setting;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ProgramCommand.UPDATE_SETTING)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProgramCommand::kPRINTFieldNumber;
const int ProgramCommand::kUPDATESETTINGFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProgramCommand::ProgramCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_ProgramCommand.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.ProgramCommand)
}
ProgramCommand::ProgramCommand(const ProgramCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kPRINT: {
      mutable_print()->::qni::api::ConsolePrintData::MergeFrom(from.print());
      break;
    }
    case kUPDATESETTING: {
      mutable_update_setting()->::qni::api::ConsoleSettingItem::MergeFrom(from.update_setting());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qni.api.ProgramCommand)
}

void ProgramCommand::SharedCtor() {
  clear_has_data();
}

ProgramCommand::~ProgramCommand() {
  // @@protoc_insertion_point(destructor:qni.api.ProgramCommand)
  SharedDtor();
}

void ProgramCommand::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
}

void ProgramCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProgramCommand::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProgramCommand& ProgramCommand::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_ProgramCommand.base);
  return *internal_default_instance();
}


void ProgramCommand::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:qni.api.ProgramCommand)
  switch (data_case()) {
    case kPRINT: {
      delete data_.print_;
      break;
    }
    case kUPDATESETTING: {
      delete data_.update_setting_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void ProgramCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.ProgramCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear();
}

bool ProgramCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.ProgramCommand)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .qni.api.ConsolePrintData PRINT = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_print()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.ConsoleSettingItem UPDATE_SETTING = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_setting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.ProgramCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.ProgramCommand)
  return false;
#undef DO_
}

void ProgramCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.ProgramCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qni.api.ConsolePrintData PRINT = 10;
  if (has_print()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_print(), output);
  }

  // .qni.api.ConsoleSettingItem UPDATE_SETTING = 11;
  if (has_update_setting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_update_setting(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.ProgramCommand)
}

::google::protobuf::uint8* ProgramCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.ProgramCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qni.api.ConsolePrintData PRINT = 10;
  if (has_print()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_print(), deterministic, target);
  }

  // .qni.api.ConsoleSettingItem UPDATE_SETTING = 11;
  if (has_update_setting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_update_setting(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.ProgramCommand)
  return target;
}

size_t ProgramCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.ProgramCommand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (data_case()) {
    // .qni.api.ConsolePrintData PRINT = 10;
    case kPRINT: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.print_);
      break;
    }
    // .qni.api.ConsoleSettingItem UPDATE_SETTING = 11;
    case kUPDATESETTING: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.update_setting_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProgramCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.ProgramCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const ProgramCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProgramCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.ProgramCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.ProgramCommand)
    MergeFrom(*source);
  }
}

void ProgramCommand::MergeFrom(const ProgramCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.ProgramCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kPRINT: {
      mutable_print()->::qni::api::ConsolePrintData::MergeFrom(from.print());
      break;
    }
    case kUPDATESETTING: {
      mutable_update_setting()->::qni::api::ConsoleSettingItem::MergeFrom(from.update_setting());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void ProgramCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.ProgramCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgramCommand::CopyFrom(const ProgramCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.ProgramCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramCommand::IsInitialized() const {
  return true;
}

void ProgramCommand::Swap(ProgramCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProgramCommand::InternalSwap(ProgramCommand* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProgramCommand::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProgramCommandArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProgramCommandArray::kCommandsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProgramCommandArray::ProgramCommandArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_ProgramCommandArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.ProgramCommandArray)
}
ProgramCommandArray::ProgramCommandArray(const ProgramCommandArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      commands_(from.commands_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qni.api.ProgramCommandArray)
}

void ProgramCommandArray::SharedCtor() {
}

ProgramCommandArray::~ProgramCommandArray() {
  // @@protoc_insertion_point(destructor:qni.api.ProgramCommandArray)
  SharedDtor();
}

void ProgramCommandArray::SharedDtor() {
}

void ProgramCommandArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProgramCommandArray::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProgramCommandArray& ProgramCommandArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_ProgramCommandArray.base);
  return *internal_default_instance();
}


void ProgramCommandArray::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.ProgramCommandArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  commands_.Clear();
  _internal_metadata_.Clear();
}

bool ProgramCommandArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.ProgramCommandArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qni.api.ProgramCommand commands = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_commands()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.ProgramCommandArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.ProgramCommandArray)
  return false;
#undef DO_
}

void ProgramCommandArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.ProgramCommandArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .qni.api.ProgramCommand commands = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->commands_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->commands(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.ProgramCommandArray)
}

::google::protobuf::uint8* ProgramCommandArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.ProgramCommandArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .qni.api.ProgramCommand commands = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->commands_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->commands(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.ProgramCommandArray)
  return target;
}

size_t ProgramCommandArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.ProgramCommandArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .qni.api.ProgramCommand commands = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->commands_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->commands(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProgramCommandArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.ProgramCommandArray)
  GOOGLE_DCHECK_NE(&from, this);
  const ProgramCommandArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProgramCommandArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.ProgramCommandArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.ProgramCommandArray)
    MergeFrom(*source);
  }
}

void ProgramCommandArray::MergeFrom(const ProgramCommandArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.ProgramCommandArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  commands_.MergeFrom(from.commands_);
}

void ProgramCommandArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.ProgramCommandArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgramCommandArray::CopyFrom(const ProgramCommandArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.ProgramCommandArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramCommandArray::IsInitialized() const {
  return true;
}

void ProgramCommandArray::Swap(ProgramCommandArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProgramCommandArray::InternalSwap(ProgramCommandArray* other) {
  using std::swap;
  CastToBase(&commands_)->InternalSwap(CastToBase(&other->commands_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProgramCommandArray::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProgramRequest::InitAsDefaultInstance() {
  ::qni::api::_ProgramRequest_default_instance_.input_ = const_cast< ::qni::api::InputRequest*>(
      ::qni::api::InputRequest::internal_default_instance());
}
void ProgramRequest::set_allocated_input(::qni::api::InputRequest* input) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (input) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input, submessage_arena);
    }
    set_has_input();
    data_.input_ = input;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ProgramRequest.INPUT)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProgramRequest::kTagFieldNumber;
const int ProgramRequest::kINPUTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProgramRequest::ProgramRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_ProgramRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.ProgramRequest)
}
ProgramRequest::ProgramRequest(const ProgramRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_ = from.tag_;
  clear_has_data();
  switch (from.data_case()) {
    case kINPUT: {
      mutable_input()->::qni::api::InputRequest::MergeFrom(from.input());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qni.api.ProgramRequest)
}

void ProgramRequest::SharedCtor() {
  tag_ = 0u;
  clear_has_data();
}

ProgramRequest::~ProgramRequest() {
  // @@protoc_insertion_point(destructor:qni.api.ProgramRequest)
  SharedDtor();
}

void ProgramRequest::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
}

void ProgramRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProgramRequest::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProgramRequest& ProgramRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_ProgramRequest.base);
  return *internal_default_instance();
}


void ProgramRequest::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:qni.api.ProgramRequest)
  switch (data_case()) {
    case kINPUT: {
      delete data_.input_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void ProgramRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.ProgramRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tag_ = 0u;
  clear_data();
  _internal_metadata_.Clear();
}

bool ProgramRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.ProgramRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 tag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.InputRequest INPUT = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.ProgramRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.ProgramRequest)
  return false;
#undef DO_
}

void ProgramRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.ProgramRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 tag = 1;
  if (this->tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tag(), output);
  }

  // .qni.api.InputRequest INPUT = 10;
  if (has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_input(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.ProgramRequest)
}

::google::protobuf::uint8* ProgramRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.ProgramRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 tag = 1;
  if (this->tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tag(), target);
  }

  // .qni.api.InputRequest INPUT = 10;
  if (has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_input(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.ProgramRequest)
  return target;
}

size_t ProgramRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.ProgramRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 tag = 1;
  if (this->tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tag());
  }

  switch (data_case()) {
    // .qni.api.InputRequest INPUT = 10;
    case kINPUT: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.input_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProgramRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.ProgramRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProgramRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProgramRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.ProgramRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.ProgramRequest)
    MergeFrom(*source);
  }
}

void ProgramRequest::MergeFrom(const ProgramRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.ProgramRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tag() != 0) {
    set_tag(from.tag());
  }
  switch (from.data_case()) {
    case kINPUT: {
      mutable_input()->::qni::api::InputRequest::MergeFrom(from.input());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void ProgramRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.ProgramRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgramRequest::CopyFrom(const ProgramRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.ProgramRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramRequest::IsInitialized() const {
  return true;
}

void ProgramRequest::Swap(ProgramRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProgramRequest::InternalSwap(ProgramRequest* other) {
  using std::swap;
  swap(tag_, other->tag_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProgramRequest::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProgramResponse::InitAsDefaultInstance() {
  ::qni::api::_ProgramResponse_default_instance_.ok_load_state_ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
  ::qni::api::_ProgramResponse_default_instance_.ok_delete_state_ = const_cast< ::qni::api::Empty*>(
      ::qni::api::Empty::internal_default_instance());
  ::qni::api::_ProgramResponse_default_instance_.ok_share_state_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::qni::api::_ProgramResponse_default_instance_.ok_get_state_ = const_cast< ::qni::api::ProgramCommandArray*>(
      ::qni::api::ProgramCommandArray::internal_default_instance());
  ::qni::api::_ProgramResponse_default_instance_.err_ = const_cast< ::qni::api::ErrorResponse*>(
      ::qni::api::ErrorResponse::internal_default_instance());
}
void ProgramResponse::set_allocated_ok_load_state(::qni::api::Empty* ok_load_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (ok_load_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ok_load_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ok_load_state, submessage_arena);
    }
    set_has_ok_load_state();
    data_.ok_load_state_ = ok_load_state;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ProgramResponse.OK_LOAD_STATE)
}
void ProgramResponse::set_allocated_ok_delete_state(::qni::api::Empty* ok_delete_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (ok_delete_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ok_delete_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ok_delete_state, submessage_arena);
    }
    set_has_ok_delete_state();
    data_.ok_delete_state_ = ok_delete_state;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ProgramResponse.OK_DELETE_STATE)
}
void ProgramResponse::set_allocated_ok_get_state(::qni::api::ProgramCommandArray* ok_get_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (ok_get_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ok_get_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ok_get_state, submessage_arena);
    }
    set_has_ok_get_state();
    data_.ok_get_state_ = ok_get_state;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ProgramResponse.OK_GET_STATE)
}
void ProgramResponse::set_allocated_err(::qni::api::ErrorResponse* err) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (err) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      err = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, err, submessage_arena);
    }
    set_has_err();
    data_.err_ = err;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ProgramResponse.ERR)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProgramResponse::kOKLOADSTATEFieldNumber;
const int ProgramResponse::kOKDELETESTATEFieldNumber;
const int ProgramResponse::kOKSHARESTATEFieldNumber;
const int ProgramResponse::kOKGETSTATEFieldNumber;
const int ProgramResponse::kERRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProgramResponse::ProgramResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_ProgramResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.ProgramResponse)
}
ProgramResponse::ProgramResponse(const ProgramResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kOKLOADSTATE: {
      mutable_ok_load_state()->::qni::api::Empty::MergeFrom(from.ok_load_state());
      break;
    }
    case kOKDELETESTATE: {
      mutable_ok_delete_state()->::qni::api::Empty::MergeFrom(from.ok_delete_state());
      break;
    }
    case kOKSHARESTATE: {
      set_ok_share_state(from.ok_share_state());
      break;
    }
    case kOKGETSTATE: {
      mutable_ok_get_state()->::qni::api::ProgramCommandArray::MergeFrom(from.ok_get_state());
      break;
    }
    case kERR: {
      mutable_err()->::qni::api::ErrorResponse::MergeFrom(from.err());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qni.api.ProgramResponse)
}

void ProgramResponse::SharedCtor() {
  clear_has_data();
}

ProgramResponse::~ProgramResponse() {
  // @@protoc_insertion_point(destructor:qni.api.ProgramResponse)
  SharedDtor();
}

void ProgramResponse::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
}

void ProgramResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProgramResponse::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProgramResponse& ProgramResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_ProgramResponse.base);
  return *internal_default_instance();
}


void ProgramResponse::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:qni.api.ProgramResponse)
  switch (data_case()) {
    case kOKLOADSTATE: {
      delete data_.ok_load_state_;
      break;
    }
    case kOKDELETESTATE: {
      delete data_.ok_delete_state_;
      break;
    }
    case kOKSHARESTATE: {
      data_.ok_share_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kOKGETSTATE: {
      delete data_.ok_get_state_;
      break;
    }
    case kERR: {
      delete data_.err_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void ProgramResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.ProgramResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear();
}

bool ProgramResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.ProgramResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .qni.api.Empty OK_LOAD_STATE = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ok_load_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.Empty OK_DELETE_STATE = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ok_delete_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string OK_SHARE_STATE = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ok_share_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ok_share_state().data(), static_cast<int>(this->ok_share_state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qni.api.ProgramResponse.OK_SHARE_STATE"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.ProgramCommandArray OK_GET_STATE = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ok_get_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.ErrorResponse ERR = 255;
      case 255: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 2042 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.ProgramResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.ProgramResponse)
  return false;
#undef DO_
}

void ProgramResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.ProgramResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qni.api.Empty OK_LOAD_STATE = 10;
  if (has_ok_load_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_ok_load_state(), output);
  }

  // .qni.api.Empty OK_DELETE_STATE = 11;
  if (has_ok_delete_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_ok_delete_state(), output);
  }

  // string OK_SHARE_STATE = 12;
  if (has_ok_share_state()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ok_share_state().data(), static_cast<int>(this->ok_share_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ProgramResponse.OK_SHARE_STATE");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->ok_share_state(), output);
  }

  // .qni.api.ProgramCommandArray OK_GET_STATE = 13;
  if (has_ok_get_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_ok_get_state(), output);
  }

  // .qni.api.ErrorResponse ERR = 255;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      255, this->_internal_err(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.ProgramResponse)
}

::google::protobuf::uint8* ProgramResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.ProgramResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qni.api.Empty OK_LOAD_STATE = 10;
  if (has_ok_load_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_ok_load_state(), deterministic, target);
  }

  // .qni.api.Empty OK_DELETE_STATE = 11;
  if (has_ok_delete_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_ok_delete_state(), deterministic, target);
  }

  // string OK_SHARE_STATE = 12;
  if (has_ok_share_state()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ok_share_state().data(), static_cast<int>(this->ok_share_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qni.api.ProgramResponse.OK_SHARE_STATE");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->ok_share_state(), target);
  }

  // .qni.api.ProgramCommandArray OK_GET_STATE = 13;
  if (has_ok_get_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_ok_get_state(), deterministic, target);
  }

  // .qni.api.ErrorResponse ERR = 255;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        255, this->_internal_err(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.ProgramResponse)
  return target;
}

size_t ProgramResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.ProgramResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (data_case()) {
    // .qni.api.Empty OK_LOAD_STATE = 10;
    case kOKLOADSTATE: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.ok_load_state_);
      break;
    }
    // .qni.api.Empty OK_DELETE_STATE = 11;
    case kOKDELETESTATE: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.ok_delete_state_);
      break;
    }
    // string OK_SHARE_STATE = 12;
    case kOKSHARESTATE: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ok_share_state());
      break;
    }
    // .qni.api.ProgramCommandArray OK_GET_STATE = 13;
    case kOKGETSTATE: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.ok_get_state_);
      break;
    }
    // .qni.api.ErrorResponse ERR = 255;
    case kERR: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.err_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProgramResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.ProgramResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ProgramResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProgramResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.ProgramResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.ProgramResponse)
    MergeFrom(*source);
  }
}

void ProgramResponse::MergeFrom(const ProgramResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.ProgramResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kOKLOADSTATE: {
      mutable_ok_load_state()->::qni::api::Empty::MergeFrom(from.ok_load_state());
      break;
    }
    case kOKDELETESTATE: {
      mutable_ok_delete_state()->::qni::api::Empty::MergeFrom(from.ok_delete_state());
      break;
    }
    case kOKSHARESTATE: {
      set_ok_share_state(from.ok_share_state());
      break;
    }
    case kOKGETSTATE: {
      mutable_ok_get_state()->::qni::api::ProgramCommandArray::MergeFrom(from.ok_get_state());
      break;
    }
    case kERR: {
      mutable_err()->::qni::api::ErrorResponse::MergeFrom(from.err());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void ProgramResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.ProgramResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgramResponse::CopyFrom(const ProgramResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.ProgramResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramResponse::IsInitialized() const {
  return true;
}

void ProgramResponse::Swap(ProgramResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProgramResponse::InternalSwap(ProgramResponse* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProgramResponse::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProgramMessage::InitAsDefaultInstance() {
  ::qni::api::_ProgramMessage_default_instance_.req_ = const_cast< ::qni::api::ProgramRequest*>(
      ::qni::api::ProgramRequest::internal_default_instance());
  ::qni::api::_ProgramMessage_default_instance_.res_ = const_cast< ::qni::api::ProgramResponse*>(
      ::qni::api::ProgramResponse::internal_default_instance());
  ::qni::api::_ProgramMessage_default_instance_.accept_res_ = 0u;
}
void ProgramMessage::set_allocated_req(::qni::api::ProgramRequest* req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (req) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    set_has_req();
    data_.req_ = req;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ProgramMessage.REQ)
}
void ProgramMessage::set_allocated_res(::qni::api::ProgramResponse* res) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (res) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      res = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, res, submessage_arena);
    }
    set_has_res();
    data_.res_ = res;
  }
  // @@protoc_insertion_point(field_set_allocated:qni.api.ProgramMessage.RES)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProgramMessage::kREQFieldNumber;
const int ProgramMessage::kRESFieldNumber;
const int ProgramMessage::kACCEPTRESFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProgramMessage::ProgramMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_qni_2dapi_2eproto::scc_info_ProgramMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:qni.api.ProgramMessage)
}
ProgramMessage::ProgramMessage(const ProgramMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kREQ: {
      mutable_req()->::qni::api::ProgramRequest::MergeFrom(from.req());
      break;
    }
    case kRES: {
      mutable_res()->::qni::api::ProgramResponse::MergeFrom(from.res());
      break;
    }
    case kACCEPTRES: {
      set_accept_res(from.accept_res());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qni.api.ProgramMessage)
}

void ProgramMessage::SharedCtor() {
  clear_has_data();
}

ProgramMessage::~ProgramMessage() {
  // @@protoc_insertion_point(destructor:qni.api.ProgramMessage)
  SharedDtor();
}

void ProgramMessage::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
}

void ProgramMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProgramMessage::descriptor() {
  ::protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProgramMessage& ProgramMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_qni_2dapi_2eproto::scc_info_ProgramMessage.base);
  return *internal_default_instance();
}


void ProgramMessage::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:qni.api.ProgramMessage)
  switch (data_case()) {
    case kREQ: {
      delete data_.req_;
      break;
    }
    case kRES: {
      delete data_.res_;
      break;
    }
    case kACCEPTRES: {
      // No need to clear
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void ProgramMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:qni.api.ProgramMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear();
}

bool ProgramMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qni.api.ProgramMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .qni.api.ProgramRequest REQ = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qni.api.ProgramResponse RES = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ACCEPT_RES = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_.accept_res_)));
          set_has_accept_res();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qni.api.ProgramMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qni.api.ProgramMessage)
  return false;
#undef DO_
}

void ProgramMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qni.api.ProgramMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qni.api.ProgramRequest REQ = 10;
  if (has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_req(), output);
  }

  // .qni.api.ProgramResponse RES = 11;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_res(), output);
  }

  // uint32 ACCEPT_RES = 12;
  if (has_accept_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->accept_res(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qni.api.ProgramMessage)
}

::google::protobuf::uint8* ProgramMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qni.api.ProgramMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qni.api.ProgramRequest REQ = 10;
  if (has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_req(), deterministic, target);
  }

  // .qni.api.ProgramResponse RES = 11;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_res(), deterministic, target);
  }

  // uint32 ACCEPT_RES = 12;
  if (has_accept_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->accept_res(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qni.api.ProgramMessage)
  return target;
}

size_t ProgramMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qni.api.ProgramMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (data_case()) {
    // .qni.api.ProgramRequest REQ = 10;
    case kREQ: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.req_);
      break;
    }
    // .qni.api.ProgramResponse RES = 11;
    case kRES: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.res_);
      break;
    }
    // uint32 ACCEPT_RES = 12;
    case kACCEPTRES: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accept_res());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProgramMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qni.api.ProgramMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ProgramMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProgramMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qni.api.ProgramMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qni.api.ProgramMessage)
    MergeFrom(*source);
  }
}

void ProgramMessage::MergeFrom(const ProgramMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qni.api.ProgramMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kREQ: {
      mutable_req()->::qni::api::ProgramRequest::MergeFrom(from.req());
      break;
    }
    case kRES: {
      mutable_res()->::qni::api::ProgramResponse::MergeFrom(from.res());
      break;
    }
    case kACCEPTRES: {
      set_accept_res(from.accept_res());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void ProgramMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qni.api.ProgramMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgramMessage::CopyFrom(const ProgramMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qni.api.ProgramMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramMessage::IsInitialized() const {
  return true;
}

void ProgramMessage::Swap(ProgramMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProgramMessage::InternalSwap(ProgramMessage* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProgramMessage::GetMetadata() const {
  protobuf_qni_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qni_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace qni
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::Empty* Arena::CreateMaybeMessage< ::qni::api::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::Empty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::StringArray* Arena::CreateMaybeMessage< ::qni::api::StringArray >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::StringArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::ErrorResponse* Arena::CreateMaybeMessage< ::qni::api::ErrorResponse >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::ErrorResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::InputRequest* Arena::CreateMaybeMessage< ::qni::api::InputRequest >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::InputRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::InputResponse* Arena::CreateMaybeMessage< ::qni::api::InputResponse >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::InputResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::ConsolePrintButtonData* Arena::CreateMaybeMessage< ::qni::api::ConsolePrintButtonData >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::ConsolePrintButtonData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::ConsolePrintData* Arena::CreateMaybeMessage< ::qni::api::ConsolePrintData >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::ConsolePrintData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::Font* Arena::CreateMaybeMessage< ::qni::api::Font >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::Font >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::ConsoleSettingItem* Arena::CreateMaybeMessage< ::qni::api::ConsoleSettingItem >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::ConsoleSettingItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::ConsoleRequest* Arena::CreateMaybeMessage< ::qni::api::ConsoleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::ConsoleRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::ConsoleResponse* Arena::CreateMaybeMessage< ::qni::api::ConsoleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::ConsoleResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::ConsoleMessage* Arena::CreateMaybeMessage< ::qni::api::ConsoleMessage >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::ConsoleMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::ProgramCommand* Arena::CreateMaybeMessage< ::qni::api::ProgramCommand >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::ProgramCommand >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::ProgramCommandArray* Arena::CreateMaybeMessage< ::qni::api::ProgramCommandArray >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::ProgramCommandArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::ProgramRequest* Arena::CreateMaybeMessage< ::qni::api::ProgramRequest >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::ProgramRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::ProgramResponse* Arena::CreateMaybeMessage< ::qni::api::ProgramResponse >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::ProgramResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::qni::api::ProgramMessage* Arena::CreateMaybeMessage< ::qni::api::ProgramMessage >(Arena* arena) {
  return Arena::CreateInternal< ::qni::api::ProgramMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
